{
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"plugins\":[],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-self",
      "filename": "D:\\NodeJsTraining\\node-training-self\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-self",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-self\\src\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-self\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "let express = require('express');\n\nlet path = require('path');\n\nlet bodyParser = require('body-parser');\n\nrequire('./db/databaseconnection');\n\nlet app = express();\napp.use(bodyParser.json());\n\nlet userModel = require('./models/user.model');\n\nlet customerRoute = require('./routes/customer');\n\napp.use(customerRoute);\napp.use(express.static('public')); // Normal request\n\napp.use((req, res, next) => {\n  console.log(`${new Date().toString()} => ${req.originalUrl} ${req.body}`);\n  next();\n}); //Error handling\n//400 - Not found error\n\napp.use((req, res, next) => {\n  res.status(404).send('Error - we think you are lost.');\n  next();\n}); //500 - Internal server error\n\napp.use((err, req, res, next) => {\n  console.log(err.stack);\n  res.sendFile(path.join(__dirname, '../public/500.html'));\n  next();\n});\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => console.info(`Server has started on ${PORT}`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicGF0aCIsImJvZHlQYXJzZXIiLCJhcHAiLCJ1c2UiLCJqc29uIiwidXNlck1vZGVsIiwiY3VzdG9tZXJSb3V0ZSIsInN0YXRpYyIsInJlcSIsInJlcyIsIm5leHQiLCJjb25zb2xlIiwibG9nIiwiRGF0ZSIsInRvU3RyaW5nIiwib3JpZ2luYWxVcmwiLCJib2R5Iiwic3RhdHVzIiwic2VuZCIsImVyciIsInN0YWNrIiwic2VuZEZpbGUiLCJqb2luIiwiX19kaXJuYW1lIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJsaXN0ZW4iLCJpbmZvIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBbEI7O0FBQ0EsSUFBSUUsVUFBVSxHQUFHRixPQUFPLENBQUMsYUFBRCxDQUF4Qjs7QUFDQUEsT0FBTyxDQUFDLHlCQUFELENBQVA7O0FBRUEsSUFBSUcsR0FBRyxHQUFHSixPQUFPLEVBQWpCO0FBQ0FJLEdBQUcsQ0FBQ0MsR0FBSixDQUFRRixVQUFVLENBQUNHLElBQVgsRUFBUjs7QUFFQSxJQUFJQyxTQUFTLEdBQUdOLE9BQU8sQ0FBQyxxQkFBRCxDQUF2Qjs7QUFFQSxJQUFJTyxhQUFhLEdBQUdQLE9BQU8sQ0FBQyxtQkFBRCxDQUEzQjs7QUFDQUcsR0FBRyxDQUFDQyxHQUFKLENBQVFHLGFBQVI7QUFFQUosR0FBRyxDQUFDQyxHQUFKLENBQVFMLE9BQU8sQ0FBQ1MsTUFBUixDQUFlLFFBQWYsQ0FBUixFLENBRUE7O0FBQ0FMLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLENBQUNLLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3hCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSxHQUFFLElBQUlDLElBQUosR0FBV0MsUUFBWCxFQUFzQixPQUFNTixHQUFHLENBQUNPLFdBQVksSUFBR1AsR0FBRyxDQUFDUSxJQUFLLEVBQXZFO0FBQ0FOLEVBQUFBLElBQUk7QUFDUCxDQUhELEUsQ0FLQTtBQUVBOztBQUNBUixHQUFHLENBQUNDLEdBQUosQ0FBUSxDQUFDSyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUN4QkQsRUFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsZ0NBQXJCO0FBQ0FSLEVBQUFBLElBQUk7QUFDUCxDQUhELEUsQ0FLQTs7QUFDQVIsR0FBRyxDQUFDQyxHQUFKLENBQVEsQ0FBQ2dCLEdBQUQsRUFBTVgsR0FBTixFQUFXQyxHQUFYLEVBQWdCQyxJQUFoQixLQUF5QjtBQUM3QkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlPLEdBQUcsQ0FBQ0MsS0FBaEI7QUFDQVgsRUFBQUEsR0FBRyxDQUFDWSxRQUFKLENBQWFyQixJQUFJLENBQUNzQixJQUFMLENBQVVDLFNBQVYsRUFBcUIsb0JBQXJCLENBQWI7QUFDQWIsRUFBQUEsSUFBSTtBQUNQLENBSkQ7QUFNQSxNQUFNYyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFaLElBQW9CLElBQWpDO0FBQ0F0QixHQUFHLENBQUN5QixNQUFKLENBQVdILElBQVgsRUFBaUIsTUFBTWIsT0FBTyxDQUFDaUIsSUFBUixDQUFjLHlCQUF3QkosSUFBSyxFQUEzQyxDQUF2QiIsInNvdXJjZVJvb3QiOiJEOlxcTm9kZUpzVHJhaW5pbmdcXG5vZGUtdHJhaW5pbmctc2VsZlxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmxldCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG5sZXQgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XHJcbnJlcXVpcmUoJy4vZGIvZGF0YWJhc2Vjb25uZWN0aW9uJyk7XHJcblxyXG5sZXQgYXBwID0gZXhwcmVzcygpO1xyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuXHJcbmxldCB1c2VyTW9kZWwgPSByZXF1aXJlKCcuL21vZGVscy91c2VyLm1vZGVsJyk7XHJcblxyXG5sZXQgY3VzdG9tZXJSb3V0ZSA9IHJlcXVpcmUoJy4vcm91dGVzL2N1c3RvbWVyJyk7XHJcbmFwcC51c2UoY3VzdG9tZXJSb3V0ZSk7XHJcblxyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKCdwdWJsaWMnKSk7XHJcblxyXG4vLyBOb3JtYWwgcmVxdWVzdFxyXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coYCR7bmV3IERhdGUoKS50b1N0cmluZygpfSA9PiAke3JlcS5vcmlnaW5hbFVybH0gJHtyZXEuYm9keX1gKTtcclxuICAgIG5leHQoKTtcclxufSk7XHJcblxyXG4vL0Vycm9yIGhhbmRsaW5nXHJcblxyXG4vLzQwMCAtIE5vdCBmb3VuZCBlcnJvclxyXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgcmVzLnN0YXR1cyg0MDQpLnNlbmQoJ0Vycm9yIC0gd2UgdGhpbmsgeW91IGFyZSBsb3N0LicpO1xyXG4gICAgbmV4dCgpO1xyXG59KTtcclxuXHJcbi8vNTAwIC0gSW50ZXJuYWwgc2VydmVyIGVycm9yXHJcbmFwcC51c2UoKGVyciwgcmVxLCByZXMsIG5leHQpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGVyci5zdGFjayk7XHJcbiAgICByZXMuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSwgJy4uL3B1YmxpYy81MDAuaHRtbCcpKTtcclxuICAgIG5leHQoKTtcclxufSk7XHJcblxyXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xyXG5hcHAubGlzdGVuKFBPUlQsICgpID0+IGNvbnNvbGUuaW5mbyhgU2VydmVyIGhhcyBzdGFydGVkIG9uICR7UE9SVH1gKSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "path",
        "bodyParser",
        "app",
        "use",
        "json",
        "userModel",
        "customerRoute",
        "static",
        "req",
        "res",
        "next",
        "console",
        "log",
        "Date",
        "toString",
        "originalUrl",
        "body",
        "status",
        "send",
        "err",
        "stack",
        "sendFile",
        "join",
        "__dirname",
        "PORT",
        "process",
        "env",
        "listen",
        "info"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,aAAD,CAAxB;;AACAA,OAAO,CAAC,yBAAD,CAAP;;AAEA,IAAIG,GAAG,GAAGJ,OAAO,EAAjB;AACAI,GAAG,CAACC,GAAJ,CAAQF,UAAU,CAACG,IAAX,EAAR;;AAEA,IAAIC,SAAS,GAAGN,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAIO,aAAa,GAAGP,OAAO,CAAC,mBAAD,CAA3B;;AACAG,GAAG,CAACC,GAAJ,CAAQG,aAAR;AAEAJ,GAAG,CAACC,GAAJ,CAAQL,OAAO,CAACS,MAAR,CAAe,QAAf,CAAR,E,CAEA;;AACAL,GAAG,CAACC,GAAJ,CAAQ,CAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAa,GAAE,IAAIC,IAAJ,GAAWC,QAAX,EAAsB,OAAMN,GAAG,CAACO,WAAY,IAAGP,GAAG,CAACQ,IAAK,EAAvE;AACAN,EAAAA,IAAI;AACP,CAHD,E,CAKA;AAEA;;AACAR,GAAG,CAACC,GAAJ,CAAQ,CAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxBD,EAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gCAArB;AACAR,EAAAA,IAAI;AACP,CAHD,E,CAKA;;AACAR,GAAG,CAACC,GAAJ,CAAQ,CAACgB,GAAD,EAAMX,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,KAAyB;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,KAAhB;AACAX,EAAAA,GAAG,CAACY,QAAJ,CAAarB,IAAI,CAACsB,IAAL,CAAUC,SAAV,EAAqB,oBAArB,CAAb;AACAb,EAAAA,IAAI;AACP,CAJD;AAMA,MAAMc,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACAtB,GAAG,CAACyB,MAAJ,CAAWH,IAAX,EAAiB,MAAMb,OAAO,CAACiB,IAAR,CAAc,yBAAwBJ,IAAK,EAA3C,CAAvB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src",
      "sourcesContent": [
        "let express = require('express');\r\nlet path = require('path');\r\nlet bodyParser = require('body-parser');\r\nrequire('./db/databaseconnection');\r\n\r\nlet app = express();\r\napp.use(bodyParser.json());\r\n\r\nlet userModel = require('./models/user.model');\r\n\r\nlet customerRoute = require('./routes/customer');\r\napp.use(customerRoute);\r\n\r\napp.use(express.static('public'));\r\n\r\n// Normal request\r\napp.use((req, res, next) => {\r\n    console.log(`${new Date().toString()} => ${req.originalUrl} ${req.body}`);\r\n    next();\r\n});\r\n\r\n//Error handling\r\n\r\n//400 - Not found error\r\napp.use((req, res, next) => {\r\n    res.status(404).send('Error - we think you are lost.');\r\n    next();\r\n});\r\n\r\n//500 - Internal server error\r\napp.use((err, req, res, next) => {\r\n    console.log(err.stack);\r\n    res.sendFile(path.join(__dirname, '../public/500.html'));\r\n    next();\r\n});\r\n\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => console.info(`Server has started on ${PORT}`));"
      ]
    },
    "sourceType": "module",
    "mtime": 1550567705299
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\db\\\\databaseconnection.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"plugins\":[],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-self",
      "filename": "D:\\NodeJsTraining\\node-training-self\\src\\db\\databaseconnection.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-self",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-self\\src\\db\\databaseconnection.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-self\\src\\db\\databaseconnection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\db",
        "sourceFileName": "databaseconnection.js"
      }
    },
    "ast": null,
    "code": "let mongoose = require('mongoose');\n\nmongoose.Promise = global.Promise;\nmongoose.connect(\"mongodb://localhost:27017/node_training_self\", {\n  useNewUrlParser: true\n}).then(() => {\n  console.log('Connected to the database !!');\n}).catch(err => {\n  console.log('Connection failed', err);\n  process.exit();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlY29ubmVjdGlvbi5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJQcm9taXNlIiwiZ2xvYmFsIiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnIiLCJwcm9jZXNzIiwiZXhpdCJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQUQsUUFBUSxDQUFDRSxPQUFULEdBQW1CQyxNQUFNLENBQUNELE9BQTFCO0FBQ0FGLFFBQVEsQ0FBQ0ksT0FBVCxDQUFpQiw4Q0FBakIsRUFBaUU7QUFBRUMsRUFBQUEsZUFBZSxFQUFFO0FBQW5CLENBQWpFLEVBQ0tDLElBREwsQ0FDVSxNQUFNO0FBQ1JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDhCQUFaO0FBQ0gsQ0FITCxFQUlLQyxLQUpMLENBSVlDLEdBQUQsSUFBUztBQUNaSCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBWixFQUFpQ0UsR0FBakM7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxJQUFSO0FBQ0gsQ0FQTCIsInNvdXJjZVJvb3QiOiJEOlxcTm9kZUpzVHJhaW5pbmdcXG5vZGUtdHJhaW5pbmctc2VsZlxcc3JjXFxkYiIsInNvdXJjZXNDb250ZW50IjpbImxldCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbm1vbmdvb3NlLlByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcclxubW9uZ29vc2UuY29ubmVjdChcIm1vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvbm9kZV90cmFpbmluZ19zZWxmXCIsIHsgdXNlTmV3VXJsUGFyc2VyOiB0cnVlIH0pXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byB0aGUgZGF0YWJhc2UgISEnKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW9uIGZhaWxlZCcsIGVycik7XHJcbiAgICAgICAgcHJvY2Vzcy5leGl0KCk7XHJcbiAgICB9KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "databaseconnection.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Promise",
        "global",
        "connect",
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "catch",
        "err",
        "process",
        "exit"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACAD,QAAQ,CAACE,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AACAF,QAAQ,CAACI,OAAT,CAAiB,8CAAjB,EAAiE;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAjE,EACKC,IADL,CACU,MAAM;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,CAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACZH,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,GAAjC;AACAC,EAAAA,OAAO,CAACC,IAAR;AACH,CAPL",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\db",
      "sourcesContent": [
        "let mongoose = require('mongoose');\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect(\"mongodb://localhost:27017/node_training_self\", { useNewUrlParser: true })\r\n    .then(() => {\r\n        console.log('Connected to the database !!');\r\n    })\r\n    .catch((err) => {\r\n        console.log('Connection failed', err);\r\n        process.exit();\r\n    });"
      ]
    },
    "sourceType": "module",
    "mtime": 1550056134277
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\routes\\\\customer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"plugins\":[],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-self",
      "filename": "D:\\NodeJsTraining\\node-training-self\\src\\routes\\customer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-self",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-self\\src\\routes\\customer.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-self\\src\\routes\\customer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\routes",
        "sourceFileName": "customer.js"
      }
    },
    "ast": null,
    "code": "let customerModel = require('../models/customer.model');\n\nlet express = require('express');\n\nlet router = express.Router(); // Get all customers Get API\n\nrouter.get('/customers', (req, res) => {\n  customerModel.find().then(doc => {\n    res.status(201).send(doc);\n  }).catch(err => {\n    res.status(500).json(err);\n  });\n}); // Add new customer POST API\n\nrouter.post('/customer', (req, res) => {\n  if (Object.keys(req.body).length === 0) {\n    return res.status(400).send('Request body is missing');\n  }\n\n  let model = new customerModel(req.body);\n  model.save().then(doc => {\n    if (!doc || doc.length === 0) {\n      return res.status(500).send(doc);\n    }\n\n    res.status(201).send(doc);\n  }).catch(err => {\n    res.status(500).json(err);\n  });\n}); // Get single customer Get API\n\nrouter.get('/customer', (req, res) => {\n  customerModel.findOne({\n    email: req.query.email\n  }).then(doc => {\n    res.status(201).send(doc);\n  }).catch(err => {\n    res.status(500).json(err);\n  });\n}); // Update customer PUT API\n\nrouter.put('/customer', (req, res) => {\n  if (Object.keys(req.body).length === 0) {\n    res.status(400).send('Request body is missing');\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbWVyLmpzIl0sIm5hbWVzIjpbImN1c3RvbWVyTW9kZWwiLCJyZXF1aXJlIiwiZXhwcmVzcyIsInJvdXRlciIsIlJvdXRlciIsImdldCIsInJlcSIsInJlcyIsImZpbmQiLCJ0aGVuIiwiZG9jIiwic3RhdHVzIiwic2VuZCIsImNhdGNoIiwiZXJyIiwianNvbiIsInBvc3QiLCJPYmplY3QiLCJrZXlzIiwiYm9keSIsImxlbmd0aCIsIm1vZGVsIiwic2F2ZSIsImZpbmRPbmUiLCJlbWFpbCIsInF1ZXJ5IiwicHV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsYUFBYSxHQUFHQyxPQUFPLENBQUMsMEJBQUQsQ0FBM0I7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJRSxNQUFNLEdBQUdELE9BQU8sQ0FBQ0UsTUFBUixFQUFiLEMsQ0FFQTs7QUFDQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsWUFBWCxFQUF5QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNuQ1AsRUFBQUEsYUFBYSxDQUFDUSxJQUFkLEdBQ0tDLElBREwsQ0FDVUMsR0FBRyxJQUFJO0FBQ1RILElBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixHQUFyQjtBQUNILEdBSEwsRUFJS0csS0FKTCxDQUlXQyxHQUFHLElBQUk7QUFDVlAsSUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkksSUFBaEIsQ0FBcUJELEdBQXJCO0FBQ0gsR0FOTDtBQU9ILENBUkQsRSxDQVVBOztBQUNBWCxNQUFNLENBQUNhLElBQVAsQ0FBWSxXQUFaLEVBQXlCLENBQUNWLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ25DLE1BQUlVLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZWixHQUFHLENBQUNhLElBQWhCLEVBQXNCQyxNQUF0QixLQUFpQyxDQUFyQyxFQUF3QztBQUNwQyxXQUFPYixHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQix5QkFBckIsQ0FBUDtBQUNIOztBQUVELE1BQUlTLEtBQUssR0FBRyxJQUFJckIsYUFBSixDQUFrQk0sR0FBRyxDQUFDYSxJQUF0QixDQUFaO0FBQ0FFLEVBQUFBLEtBQUssQ0FBQ0MsSUFBTixHQUNLYixJQURMLENBQ1dDLEdBQUQsSUFBUztBQUNYLFFBQUksQ0FBQ0EsR0FBRCxJQUFRQSxHQUFHLENBQUNVLE1BQUosS0FBZSxDQUEzQixFQUE4QjtBQUMxQixhQUFPYixHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsR0FBckIsQ0FBUDtBQUNIOztBQUNESCxJQUFBQSxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsR0FBckI7QUFDSCxHQU5MLEVBTU9HLEtBTlAsQ0FNY0MsR0FBRCxJQUFTO0FBQ2RQLElBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JJLElBQWhCLENBQXFCRCxHQUFyQjtBQUNILEdBUkw7QUFTSCxDQWZELEUsQ0FpQkE7O0FBQ0FYLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFdBQVgsRUFBd0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDbENQLEVBQUFBLGFBQWEsQ0FBQ3VCLE9BQWQsQ0FBc0I7QUFDZEMsSUFBQUEsS0FBSyxFQUFFbEIsR0FBRyxDQUFDbUIsS0FBSixDQUFVRDtBQURILEdBQXRCLEVBR0tmLElBSEwsQ0FHVUMsR0FBRyxJQUFJO0FBQ1RILElBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixHQUFyQjtBQUNILEdBTEwsRUFNS0csS0FOTCxDQU1XQyxHQUFHLElBQUk7QUFDVlAsSUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkksSUFBaEIsQ0FBcUJELEdBQXJCO0FBQ0gsR0FSTDtBQVNILENBVkQsRSxDQVlBOztBQUNBWCxNQUFNLENBQUN1QixHQUFQLENBQVcsV0FBWCxFQUF3QixDQUFDcEIsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDbEMsTUFBSVUsTUFBTSxDQUFDQyxJQUFQLENBQVlaLEdBQUcsQ0FBQ2EsSUFBaEIsRUFBc0JDLE1BQXRCLEtBQWlDLENBQXJDLEVBQXdDO0FBQ3BDYixJQUFBQSxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQix5QkFBckI7QUFDSDtBQUVKLENBTEQ7QUFTQWUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCekIsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXE5vZGVKc1RyYWluaW5nXFxub2RlLXRyYWluaW5nLXNlbGZcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGN1c3RvbWVyTW9kZWwgPSByZXF1aXJlKCcuLi9tb2RlbHMvY3VzdG9tZXIubW9kZWwnKTtcclxubGV0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmxldCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxuLy8gR2V0IGFsbCBjdXN0b21lcnMgR2V0IEFQSVxyXG5yb3V0ZXIuZ2V0KCcvY3VzdG9tZXJzJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjdXN0b21lck1vZGVsLmZpbmQoKVxyXG4gICAgICAgIC50aGVuKGRvYyA9PiB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5zZW5kKGRvYyk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goZXJyID0+IHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oZXJyKTtcclxuICAgICAgICB9KTtcclxufSk7XHJcblxyXG4vLyBBZGQgbmV3IGN1c3RvbWVyIFBPU1QgQVBJXHJcbnJvdXRlci5wb3N0KCcvY3VzdG9tZXInLCAocmVxLCByZXMpID0+IHtcclxuICAgIGlmIChPYmplY3Qua2V5cyhyZXEuYm9keSkubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKCdSZXF1ZXN0IGJvZHkgaXMgbWlzc2luZycpO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBtb2RlbCA9IG5ldyBjdXN0b21lck1vZGVsKHJlcS5ib2R5KTtcclxuICAgIG1vZGVsLnNhdmUoKVxyXG4gICAgICAgIC50aGVuKChkb2MpID0+IHtcclxuICAgICAgICAgICAgaWYgKCFkb2MgfHwgZG9jLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGRvYyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDEpLnNlbmQoZG9jKTtcclxuICAgICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKGVycik7XHJcbiAgICAgICAgfSk7XHJcbn0pO1xyXG5cclxuLy8gR2V0IHNpbmdsZSBjdXN0b21lciBHZXQgQVBJXHJcbnJvdXRlci5nZXQoJy9jdXN0b21lcicsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY3VzdG9tZXJNb2RlbC5maW5kT25lKHtcclxuICAgICAgICAgICAgZW1haWw6IHJlcS5xdWVyeS5lbWFpbFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oZG9jID0+IHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDEpLnNlbmQoZG9jKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaChlcnIgPT4ge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbihlcnIpO1xyXG4gICAgICAgIH0pO1xyXG59KTtcclxuXHJcbi8vIFVwZGF0ZSBjdXN0b21lciBQVVQgQVBJXHJcbnJvdXRlci5wdXQoJy9jdXN0b21lcicsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgaWYgKE9iamVjdC5rZXlzKHJlcS5ib2R5KS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICByZXMuc3RhdHVzKDQwMCkuc2VuZCgnUmVxdWVzdCBib2R5IGlzIG1pc3NpbmcnKTtcclxuICAgIH1cclxuXHJcbn0pO1xyXG5cclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "customer.js"
      ],
      "names": [
        "customerModel",
        "require",
        "express",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "find",
        "then",
        "doc",
        "status",
        "send",
        "catch",
        "err",
        "json",
        "post",
        "Object",
        "keys",
        "body",
        "length",
        "model",
        "save",
        "findOne",
        "email",
        "query",
        "put",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,0BAAD,CAA3B;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,MAAM,GAAGD,OAAO,CAACE,MAAR,EAAb,C,CAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,YAAX,EAAyB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnCP,EAAAA,aAAa,CAACQ,IAAd,GACKC,IADL,CACUC,GAAG,IAAI;AACTH,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB;AACH,GAHL,EAIKG,KAJL,CAIWC,GAAG,IAAI;AACVP,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqBD,GAArB;AACH,GANL;AAOH,CARD,E,CAUA;;AACAX,MAAM,CAACa,IAAP,CAAY,WAAZ,EAAyB,CAACV,GAAD,EAAMC,GAAN,KAAc;AACnC,MAAIU,MAAM,CAACC,IAAP,CAAYZ,GAAG,CAACa,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,WAAOb,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yBAArB,CAAP;AACH;;AAED,MAAIS,KAAK,GAAG,IAAIrB,aAAJ,CAAkBM,GAAG,CAACa,IAAtB,CAAZ;AACAE,EAAAA,KAAK,CAACC,IAAN,GACKb,IADL,CACWC,GAAD,IAAS;AACX,QAAI,CAACA,GAAD,IAAQA,GAAG,CAACU,MAAJ,KAAe,CAA3B,EAA8B;AAC1B,aAAOb,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CAAP;AACH;;AACDH,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB;AACH,GANL,EAMOG,KANP,CAMcC,GAAD,IAAS;AACdP,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqBD,GAArB;AACH,GARL;AASH,CAfD,E,CAiBA;;AACAX,MAAM,CAACE,GAAP,CAAW,WAAX,EAAwB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClCP,EAAAA,aAAa,CAACuB,OAAd,CAAsB;AACdC,IAAAA,KAAK,EAAElB,GAAG,CAACmB,KAAJ,CAAUD;AADH,GAAtB,EAGKf,IAHL,CAGUC,GAAG,IAAI;AACTH,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB;AACH,GALL,EAMKG,KANL,CAMWC,GAAG,IAAI;AACVP,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqBD,GAArB;AACH,GARL;AASH,CAVD,E,CAYA;;AACAX,MAAM,CAACuB,GAAP,CAAW,WAAX,EAAwB,CAACpB,GAAD,EAAMC,GAAN,KAAc;AAClC,MAAIU,MAAM,CAACC,IAAP,CAAYZ,GAAG,CAACa,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpCb,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yBAArB;AACH;AAEJ,CALD;AASAe,MAAM,CAACC,OAAP,GAAiBzB,MAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\routes",
      "sourcesContent": [
        "let customerModel = require('../models/customer.model');\r\nlet express = require('express');\r\nlet router = express.Router();\r\n\r\n// Get all customers Get API\r\nrouter.get('/customers', (req, res) => {\r\n    customerModel.find()\r\n        .then(doc => {\r\n            res.status(201).send(doc);\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Add new customer POST API\r\nrouter.post('/customer', (req, res) => {\r\n    if (Object.keys(req.body).length === 0) {\r\n        return res.status(400).send('Request body is missing');\r\n    }\r\n\r\n    let model = new customerModel(req.body);\r\n    model.save()\r\n        .then((doc) => {\r\n            if (!doc || doc.length === 0) {\r\n                return res.status(500).send(doc);\r\n            }\r\n            res.status(201).send(doc);\r\n        }).catch((err) => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Get single customer Get API\r\nrouter.get('/customer', (req, res) => {\r\n    customerModel.findOne({\r\n            email: req.query.email\r\n        })\r\n        .then(doc => {\r\n            res.status(201).send(doc);\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Update customer PUT API\r\nrouter.put('/customer', (req, res) => {\r\n    if (Object.keys(req.body).length === 0) {\r\n        res.status(400).send('Request body is missing');\r\n    }\r\n\r\n});\r\n\r\n\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1550056678815
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\models\\\\customer.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"plugins\":[],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-self",
      "filename": "D:\\NodeJsTraining\\node-training-self\\src\\models\\customer.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-self",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-self\\src\\models\\customer.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-self\\src\\models\\customer.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\models",
        "sourceFileName": "customer.model.js"
      }
    },
    "ast": null,
    "code": "let mongoose = require('mongoose');\n\nlet customerSchema = new mongoose.Schema({\n  name: String,\n  email: {\n    type: String,\n    require: true,\n    unique: true\n  }\n});\nmodule.exports = mongoose.model('customer', customerSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbWVyLm1vZGVsLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImN1c3RvbWVyU2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsIlN0cmluZyIsImVtYWlsIiwidHlwZSIsInVuaXF1ZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxJQUFJQyxjQUFjLEdBQUcsSUFBSUYsUUFBUSxDQUFDRyxNQUFiLENBQW9CO0FBQ3JDQyxFQUFBQSxJQUFJLEVBQUVDLE1BRCtCO0FBRXJDQyxFQUFBQSxLQUFLLEVBQUU7QUFDSEMsSUFBQUEsSUFBSSxFQUFFRixNQURIO0FBRUhKLElBQUFBLE9BQU8sRUFBRSxJQUZOO0FBR0hPLElBQUFBLE1BQU0sRUFBRTtBQUhMO0FBRjhCLENBQXBCLENBQXJCO0FBU0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsUUFBUSxDQUFDVyxLQUFULENBQWUsVUFBZixFQUEyQlQsY0FBM0IsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXE5vZGVKc1RyYWluaW5nXFxub2RlLXRyYWluaW5nLXNlbGZcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxubGV0IGN1c3RvbWVyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICBuYW1lOiBTdHJpbmcsXHJcbiAgICBlbWFpbDoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlOiB0cnVlLFxyXG4gICAgICAgIHVuaXF1ZTogdHJ1ZVxyXG4gICAgfVxyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoJ2N1c3RvbWVyJywgY3VzdG9tZXJTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "customer.model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "customerSchema",
        "Schema",
        "name",
        "String",
        "email",
        "type",
        "unique",
        "module",
        "exports",
        "model"
      ],
      "mappings": "AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,cAAc,GAAG,IAAIF,QAAQ,CAACG,MAAb,CAAoB;AACrCC,EAAAA,IAAI,EAAEC,MAD+B;AAErCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEF,MADH;AAEHJ,IAAAA,OAAO,EAAE,IAFN;AAGHO,IAAAA,MAAM,EAAE;AAHL;AAF8B,CAApB,CAArB;AASAC,MAAM,CAACC,OAAP,GAAiBV,QAAQ,CAACW,KAAT,CAAe,UAAf,EAA2BT,cAA3B,CAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\models",
      "sourcesContent": [
        "let mongoose = require('mongoose');\r\nlet customerSchema = new mongoose.Schema({\r\n    name: String,\r\n    email: {\r\n        type: String,\r\n        require: true,\r\n        unique: true\r\n    }\r\n});\r\n\r\nmodule.exports = mongoose.model('customer', customerSchema);"
      ]
    },
    "sourceType": "module",
    "mtime": 1550567658622
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\models\\\\user.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"plugins\":[],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-self",
      "filename": "D:\\NodeJsTraining\\node-training-self\\src\\models\\user.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-self",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-self\\src\\models\\user.model.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-self\\src\\models\\user.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\models",
        "sourceFileName": "user.model.js"
      }
    },
    "ast": null,
    "code": "import mongoose, { Schema } from 'mongoose';\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJTY2hlbWEiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLFFBQVAsSUFBa0JDLE1BQWxCLFFBQStCLFVBQS9CIiwic291cmNlUm9vdCI6IkQ6XFxOb2RlSnNUcmFpbmluZ1xcbm9kZS10cmFpbmluZy1zZWxmXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSx7IFNjaGVtYX0gZnJvbSAnbW9uZ29vc2UnOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.model.js"
      ],
      "names": [
        "mongoose",
        "Schema"
      ],
      "mappings": "AAAA,OAAOA,QAAP,IAAkBC,MAAlB,QAA+B,UAA/B",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\models",
      "sourcesContent": [
        "import mongoose,{ Schema} from 'mongoose';"
      ]
    },
    "sourceType": "module",
    "mtime": 1550567643606
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-self",
      "filename": "D:\\NodeJsTraining\\node-training-self\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-self",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-self\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-self\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../config.json\"));\n\nvar _databaseconnection = _interopRequireDefault(require(\"./db/databaseconnection\"));\n\nvar _customer = _interopRequireDefault(require(\"./routes/customer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar tokenList = {};\nvar app = (0, _express.default)();\napp.use(_bodyParser.default.json());\n\nvar userRoute = require('./routes/user');\n\napp.use('/api/user', userRoute);\napp.use('/api/customer', _customer.default);\napp.use(_express.default.static('public')); // Normal request\n\napp.use(function (req, res, next) {\n  console.log(\"\".concat(new Date().toString(), \" => \").concat(req.originalUrl, \" \").concat(req.body));\n  next();\n}); //Error handling\n//400 - Not found error\n\napp.use(function (req, res, next) {\n  res.status(404).send('Error - we think you are lost.');\n  next();\n}); //500 - Internal server error\n\napp.use(function (err, req, res, next) {\n  console.log(err.stack);\n  res.sendFile(_path.default.join(__dirname, '../public/500.html'));\n  next();\n});\nvar PORT = process.env.PORT || 3001;\napp.listen(PORT, function () {\n  return console.info(\"Server has started on \".concat(PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInRva2VuTGlzdCIsImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwidXNlclJvdXRlIiwicmVxdWlyZSIsImN1c3RvbWVyUm91dGUiLCJleHByZXNzIiwic3RhdGljIiwicmVxIiwicmVzIiwibmV4dCIsImNvbnNvbGUiLCJsb2ciLCJEYXRlIiwidG9TdHJpbmciLCJvcmlnaW5hbFVybCIsImJvZHkiLCJzdGF0dXMiLCJzZW5kIiwiZXJyIiwic3RhY2siLCJzZW5kRmlsZSIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJsaXN0ZW4iLCJpbmZvIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQVVBOzs7O0FBUkEsSUFBTUEsU0FBUyxHQUFHLEVBQWxCO0FBRUEsSUFBSUMsR0FBRyxHQUFHLHVCQUFWO0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyxvQkFBV0MsSUFBWCxFQUFSOztBQUVBLElBQUlDLFNBQVMsR0FBR0MsT0FBTyxDQUFDLGVBQUQsQ0FBdkI7O0FBQ0FMLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFdBQVIsRUFBcUJHLFNBQXJCO0FBR0FKLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGVBQVIsRUFBeUJLLGlCQUF6QjtBQUVBTixHQUFHLENBQUNDLEdBQUosQ0FBUU0saUJBQVFDLE1BQVIsQ0FBZSxRQUFmLENBQVIsRSxDQUVBOztBQUNBUixHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFDUSxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN4QkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLFdBQWUsSUFBSUMsSUFBSixHQUFXQyxRQUFYLEVBQWYsaUJBQTJDTixHQUFHLENBQUNPLFdBQS9DLGNBQThEUCxHQUFHLENBQUNRLElBQWxFO0FBQ0FOLEVBQUFBLElBQUk7QUFDUCxDQUhELEUsQ0FLQTtBQUVBOztBQUNBWCxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFDUSxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN4QkQsRUFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsZ0NBQXJCO0FBQ0FSLEVBQUFBLElBQUk7QUFDUCxDQUhELEUsQ0FLQTs7QUFDQVgsR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBQ21CLEdBQUQsRUFBTVgsR0FBTixFQUFXQyxHQUFYLEVBQWdCQyxJQUFoQixFQUF5QjtBQUM3QkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlPLEdBQUcsQ0FBQ0MsS0FBaEI7QUFDQVgsRUFBQUEsR0FBRyxDQUFDWSxRQUFKLENBQWFDLGNBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixvQkFBckIsQ0FBYjtBQUNBZCxFQUFBQSxJQUFJO0FBQ1AsQ0FKRDtBQU1BLElBQU1lLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVosSUFBb0IsSUFBakM7QUFDQTFCLEdBQUcsQ0FBQzZCLE1BQUosQ0FBV0gsSUFBWCxFQUFpQjtBQUFBLFNBQU1kLE9BQU8sQ0FBQ2tCLElBQVIsaUNBQXNDSixJQUF0QyxFQUFOO0FBQUEsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXE5vZGVKc1RyYWluaW5nXFxub2RlLXRyYWluaW5nLXNlbGZcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xyXG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vY29uZmlnLmpzb24nXHJcbmltcG9ydCBkYkNvbm5lY3Rpb24gZnJvbSAnLi9kYi9kYXRhYmFzZWNvbm5lY3Rpb24nO1xyXG5cclxuY29uc3QgdG9rZW5MaXN0ID0ge307XHJcblxyXG5sZXQgYXBwID0gZXhwcmVzcygpO1xyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuXHJcbmxldCB1c2VyUm91dGUgPSByZXF1aXJlKCcuL3JvdXRlcy91c2VyJyk7XHJcbmFwcC51c2UoJy9hcGkvdXNlcicsIHVzZXJSb3V0ZSk7XHJcblxyXG5pbXBvcnQgY3VzdG9tZXJSb3V0ZSBmcm9tICcuL3JvdXRlcy9jdXN0b21lcic7XHJcbmFwcC51c2UoJy9hcGkvY3VzdG9tZXInLCBjdXN0b21lclJvdXRlKTtcclxuXHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKTtcclxuXHJcbi8vIE5vcm1hbCByZXF1ZXN0XHJcbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhgJHtuZXcgRGF0ZSgpLnRvU3RyaW5nKCl9ID0+ICR7cmVxLm9yaWdpbmFsVXJsfSAke3JlcS5ib2R5fWApO1xyXG4gICAgbmV4dCgpO1xyXG59KTtcclxuXHJcbi8vRXJyb3IgaGFuZGxpbmdcclxuXHJcbi8vNDAwIC0gTm90IGZvdW5kIGVycm9yXHJcbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICByZXMuc3RhdHVzKDQwNCkuc2VuZCgnRXJyb3IgLSB3ZSB0aGluayB5b3UgYXJlIGxvc3QuJyk7XHJcbiAgICBuZXh0KCk7XHJcbn0pO1xyXG5cclxuLy81MDAgLSBJbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcclxuYXBwLnVzZSgoZXJyLCByZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZXJyLnN0YWNrKTtcclxuICAgIHJlcy5zZW5kRmlsZShwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vcHVibGljLzUwMC5odG1sJykpO1xyXG4gICAgbmV4dCgpO1xyXG59KTtcclxuXHJcbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDE7XHJcbmFwcC5saXN0ZW4oUE9SVCwgKCkgPT4gY29uc29sZS5pbmZvKGBTZXJ2ZXIgaGFzIHN0YXJ0ZWQgb24gJHtQT1JUfWApKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "tokenList",
        "app",
        "use",
        "bodyParser",
        "json",
        "userRoute",
        "require",
        "customerRoute",
        "express",
        "static",
        "req",
        "res",
        "next",
        "console",
        "log",
        "Date",
        "toString",
        "originalUrl",
        "body",
        "status",
        "send",
        "err",
        "stack",
        "sendFile",
        "path",
        "join",
        "__dirname",
        "PORT",
        "process",
        "env",
        "listen",
        "info"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAUA;;;;AARA,IAAMA,SAAS,GAAG,EAAlB;AAEA,IAAIC,GAAG,GAAG,uBAAV;AACAA,GAAG,CAACC,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAvB;;AACAL,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBG,SAArB;AAGAJ,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBK,iBAAzB;AAEAN,GAAG,CAACC,GAAJ,CAAQM,iBAAQC,MAAR,CAAe,QAAf,CAAR,E,CAEA;;AACAR,GAAG,CAACC,GAAJ,CAAQ,UAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBC,EAAAA,OAAO,CAACC,GAAR,WAAe,IAAIC,IAAJ,GAAWC,QAAX,EAAf,iBAA2CN,GAAG,CAACO,WAA/C,cAA8DP,GAAG,CAACQ,IAAlE;AACAN,EAAAA,IAAI;AACP,CAHD,E,CAKA;AAEA;;AACAX,GAAG,CAACC,GAAJ,CAAQ,UAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gCAArB;AACAR,EAAAA,IAAI;AACP,CAHD,E,CAKA;;AACAX,GAAG,CAACC,GAAJ,CAAQ,UAACmB,GAAD,EAAMX,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,KAAhB;AACAX,EAAAA,GAAG,CAACY,QAAJ,CAAaC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,oBAArB,CAAb;AACAd,EAAAA,IAAI;AACP,CAJD;AAMA,IAAMe,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA1B,GAAG,CAAC6B,MAAJ,CAAWH,IAAX,EAAiB;AAAA,SAAMd,OAAO,CAACkB,IAAR,iCAAsCJ,IAAtC,EAAN;AAAA,CAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport path from 'path';\r\nimport bodyParser from 'body-parser';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config.json'\r\nimport dbConnection from './db/databaseconnection';\r\n\r\nconst tokenList = {};\r\n\r\nlet app = express();\r\napp.use(bodyParser.json());\r\n\r\nlet userRoute = require('./routes/user');\r\napp.use('/api/user', userRoute);\r\n\r\nimport customerRoute from './routes/customer';\r\napp.use('/api/customer', customerRoute);\r\n\r\napp.use(express.static('public'));\r\n\r\n// Normal request\r\napp.use((req, res, next) => {\r\n    console.log(`${new Date().toString()} => ${req.originalUrl} ${req.body}`);\r\n    next();\r\n});\r\n\r\n//Error handling\r\n\r\n//400 - Not found error\r\napp.use((req, res, next) => {\r\n    res.status(404).send('Error - we think you are lost.');\r\n    next();\r\n});\r\n\r\n//500 - Internal server error\r\napp.use((err, req, res, next) => {\r\n    console.log(err.stack);\r\n    res.sendFile(path.join(__dirname, '../public/500.html'));\r\n    next();\r\n});\r\n\r\nconst PORT = process.env.PORT || 3001;\r\napp.listen(PORT, () => console.info(`Server has started on ${PORT}`));"
      ]
    },
    "sourceType": "script",
    "mtime": 1550731043930
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\db\\\\databaseconnection.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-self",
      "filename": "D:\\NodeJsTraining\\node-training-self\\src\\db\\databaseconnection.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-self",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-self\\src\\db\\databaseconnection.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-self\\src\\db\\databaseconnection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\db",
        "sourceFileName": "databaseconnection.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_mongoose.default.Promise = global.Promise;\n\n_mongoose.default.connect(\"mongodb://localhost:27017/node_training_self\", {\n  useNewUrlParser: true\n}).then(function () {\n  console.log('Connected to the database !!');\n}).catch(function (err) {\n  console.log('Connection failed', err);\n  process.exit();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlY29ubmVjdGlvbi5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsIlByb21pc2UiLCJnbG9iYWwiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidGhlbiIsImNvbnNvbGUiLCJsb2ciLCJjYXRjaCIsImVyciIsInByb2Nlc3MiLCJleGl0Il0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUFBLGtCQUFTQyxPQUFULEdBQW1CQyxNQUFNLENBQUNELE9BQTFCOztBQUNBRCxrQkFBU0csT0FBVCxDQUFpQiw4Q0FBakIsRUFBaUU7QUFBRUMsRUFBQUEsZUFBZSxFQUFFO0FBQW5CLENBQWpFLEVBQ0tDLElBREwsQ0FDVSxZQUFNO0FBQ1JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDhCQUFaO0FBQ0gsQ0FITCxFQUlLQyxLQUpMLENBSVcsVUFBQ0MsR0FBRCxFQUFTO0FBQ1pILEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1CQUFaLEVBQWlDRSxHQUFqQztBQUNBQyxFQUFBQSxPQUFPLENBQUNDLElBQVI7QUFDSCxDQVBMIiwic291cmNlUm9vdCI6IkQ6XFxOb2RlSnNUcmFpbmluZ1xcbm9kZS10cmFpbmluZy1zZWxmXFxzcmNcXGRiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxuXHJcbm1vbmdvb3NlLlByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcclxubW9uZ29vc2UuY29ubmVjdChcIm1vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvbm9kZV90cmFpbmluZ19zZWxmXCIsIHsgdXNlTmV3VXJsUGFyc2VyOiB0cnVlIH0pXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byB0aGUgZGF0YWJhc2UgISEnKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW9uIGZhaWxlZCcsIGVycik7XHJcbiAgICAgICAgcHJvY2Vzcy5leGl0KCk7XHJcbiAgICB9KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "databaseconnection.js"
      ],
      "names": [
        "mongoose",
        "Promise",
        "global",
        "connect",
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "catch",
        "err",
        "process",
        "exit"
      ],
      "mappings": ";;AAAA;;;;AAEAA,kBAASC,OAAT,GAAmBC,MAAM,CAACD,OAA1B;;AACAD,kBAASG,OAAT,CAAiB,8CAAjB,EAAiE;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAjE,EACKC,IADL,CACU,YAAM;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,CAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZH,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,GAAjC;AACAC,EAAAA,OAAO,CAACC,IAAR;AACH,CAPL",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\db",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\n\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect(\"mongodb://localhost:27017/node_training_self\", { useNewUrlParser: true })\r\n    .then(() => {\r\n        console.log('Connected to the database !!');\r\n    })\r\n    .catch((err) => {\r\n        console.log('Connection failed', err);\r\n        process.exit();\r\n    });"
      ]
    },
    "sourceType": "script",
    "mtime": 1550744491196
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\models\\\\user.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-self",
      "filename": "D:\\NodeJsTraining\\node-training-self\\src\\models\\user.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-self",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-self\\src\\models\\user.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-self\\src\\models\\user.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\models",
        "sourceFileName": "user.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar saltRound = 10;\nvar userSchema = new _mongoose.default.Schema({\n  name: String,\n  username: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  isactive: Boolean,\n  createddate: Date,\n  updateddate: Date\n});\nuserSchema.pre('save', function (next) {\n  console.log('userSchema pre calling');\n  var currentDate = new Date();\n  this.updateddate = currentDate;\n\n  if (this.createddate == undefined) {\n    this.createddate = currentDate;\n  }\n\n  this.password = _bcrypt.default.hashSync(this.password, saltRound);\n  next();\n});\nmodule.exports = _mongoose.default.model('user', userSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kZWwuanMiXSwibmFtZXMiOlsic2FsdFJvdW5kIiwidXNlclNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwibmFtZSIsIlN0cmluZyIsInVzZXJuYW1lIiwidHlwZSIsInJlcXVpcmVkIiwidW5pcXVlIiwicGFzc3dvcmQiLCJ0cmltIiwiaXNhY3RpdmUiLCJCb29sZWFuIiwiY3JlYXRlZGRhdGUiLCJEYXRlIiwidXBkYXRlZGRhdGUiLCJwcmUiLCJuZXh0IiwiY29uc29sZSIsImxvZyIsImN1cnJlbnREYXRlIiwidW5kZWZpbmVkIiwiYmNyeXB0IiwiaGFzaFN5bmMiLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFDQSxJQUFNQSxTQUFTLEdBQUcsRUFBbEI7QUFFQSxJQUFJQyxVQUFVLEdBQUcsSUFBSUMsa0JBQVNDLE1BQWIsQ0FBb0I7QUFDakNDLEVBQUFBLElBQUksRUFBRUMsTUFEMkI7QUFFakNDLEVBQUFBLFFBQVEsRUFBRTtBQUNOQyxJQUFBQSxJQUFJLEVBQUVGLE1BREE7QUFFTkcsSUFBQUEsUUFBUSxFQUFFLElBRko7QUFHTkMsSUFBQUEsTUFBTSxFQUFFO0FBSEYsR0FGdUI7QUFPakNDLEVBQUFBLFFBQVEsRUFBRTtBQUNOSCxJQUFBQSxJQUFJLEVBQUVGLE1BREE7QUFFTkcsSUFBQUEsUUFBUSxFQUFFLElBRko7QUFHTkcsSUFBQUEsSUFBSSxFQUFFO0FBSEEsR0FQdUI7QUFZakNDLEVBQUFBLFFBQVEsRUFBRUMsT0FadUI7QUFhakNDLEVBQUFBLFdBQVcsRUFBRUMsSUFib0I7QUFjakNDLEVBQUFBLFdBQVcsRUFBRUQ7QUFkb0IsQ0FBcEIsQ0FBakI7QUFpQkFkLFVBQVUsQ0FBQ2dCLEdBQVgsQ0FBZSxNQUFmLEVBQXVCLFVBQVVDLElBQVYsRUFBZ0I7QUFDbkNDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaO0FBQ0EsTUFBSUMsV0FBVyxHQUFHLElBQUlOLElBQUosRUFBbEI7QUFDQSxPQUFLQyxXQUFMLEdBQW1CSyxXQUFuQjs7QUFDQSxNQUFJLEtBQUtQLFdBQUwsSUFBb0JRLFNBQXhCLEVBQW1DO0FBQy9CLFNBQUtSLFdBQUwsR0FBbUJPLFdBQW5CO0FBQ0g7O0FBQ0QsT0FBS1gsUUFBTCxHQUFnQmEsZ0JBQU9DLFFBQVAsQ0FBZ0IsS0FBS2QsUUFBckIsRUFBK0JWLFNBQS9CLENBQWhCO0FBQ0FrQixFQUFBQSxJQUFJO0FBQ1AsQ0FURDtBQVdBTyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ4QixrQkFBU3lCLEtBQVQsQ0FBZSxNQUFmLEVBQXVCMUIsVUFBdkIsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXE5vZGVKc1RyYWluaW5nXFxub2RlLXRyYWluaW5nLXNlbGZcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxuaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHQnO1xyXG5jb25zdCBzYWx0Um91bmQgPSAxMDtcclxuXHJcbmxldCB1c2VyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICBuYW1lOiBTdHJpbmcsXHJcbiAgICB1c2VybmFtZToge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICB1bmlxdWU6IHRydWVcclxuICAgIH0sXHJcbiAgICBwYXNzd29yZDoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICB0cmltOiB0cnVlXHJcbiAgICB9LFxyXG4gICAgaXNhY3RpdmU6IEJvb2xlYW4sXHJcbiAgICBjcmVhdGVkZGF0ZTogRGF0ZSxcclxuICAgIHVwZGF0ZWRkYXRlOiBEYXRlXHJcbn0pO1xyXG5cclxudXNlclNjaGVtYS5wcmUoJ3NhdmUnLCBmdW5jdGlvbiAobmV4dCkge1xyXG4gICAgY29uc29sZS5sb2coJ3VzZXJTY2hlbWEgcHJlIGNhbGxpbmcnKTtcclxuICAgIHZhciBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKCk7XHJcbiAgICB0aGlzLnVwZGF0ZWRkYXRlID0gY3VycmVudERhdGU7XHJcbiAgICBpZiAodGhpcy5jcmVhdGVkZGF0ZSA9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICB0aGlzLmNyZWF0ZWRkYXRlID0gY3VycmVudERhdGU7XHJcbiAgICB9XHJcbiAgICB0aGlzLnBhc3N3b3JkID0gYmNyeXB0Lmhhc2hTeW5jKHRoaXMucGFzc3dvcmQsIHNhbHRSb3VuZCk7XHJcbiAgICBuZXh0KCk7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgndXNlcicsIHVzZXJTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.model.js"
      ],
      "names": [
        "saltRound",
        "userSchema",
        "mongoose",
        "Schema",
        "name",
        "String",
        "username",
        "type",
        "required",
        "unique",
        "password",
        "trim",
        "isactive",
        "Boolean",
        "createddate",
        "Date",
        "updateddate",
        "pre",
        "next",
        "console",
        "log",
        "currentDate",
        "undefined",
        "bcrypt",
        "hashSync",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA;;AACA;;;;AACA,IAAMA,SAAS,GAAG,EAAlB;AAEA,IAAIC,UAAU,GAAG,IAAIC,kBAASC,MAAb,CAAoB;AACjCC,EAAAA,IAAI,EAAEC,MAD2B;AAEjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAEF,MADA;AAENG,IAAAA,QAAQ,EAAE,IAFJ;AAGNC,IAAAA,MAAM,EAAE;AAHF,GAFuB;AAOjCC,EAAAA,QAAQ,EAAE;AACNH,IAAAA,IAAI,EAAEF,MADA;AAENG,IAAAA,QAAQ,EAAE,IAFJ;AAGNG,IAAAA,IAAI,EAAE;AAHA,GAPuB;AAYjCC,EAAAA,QAAQ,EAAEC,OAZuB;AAajCC,EAAAA,WAAW,EAAEC,IAboB;AAcjCC,EAAAA,WAAW,EAAED;AAdoB,CAApB,CAAjB;AAiBAd,UAAU,CAACgB,GAAX,CAAe,MAAf,EAAuB,UAAUC,IAAV,EAAgB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,MAAIC,WAAW,GAAG,IAAIN,IAAJ,EAAlB;AACA,OAAKC,WAAL,GAAmBK,WAAnB;;AACA,MAAI,KAAKP,WAAL,IAAoBQ,SAAxB,EAAmC;AAC/B,SAAKR,WAAL,GAAmBO,WAAnB;AACH;;AACD,OAAKX,QAAL,GAAgBa,gBAAOC,QAAP,CAAgB,KAAKd,QAArB,EAA+BV,SAA/B,CAAhB;AACAkB,EAAAA,IAAI;AACP,CATD;AAWAO,MAAM,CAACC,OAAP,GAAiBxB,kBAASyB,KAAT,CAAe,MAAf,EAAuB1B,UAAvB,CAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\nimport bcrypt from 'bcrypt';\r\nconst saltRound = 10;\r\n\r\nlet userSchema = new mongoose.Schema({\r\n    name: String,\r\n    username: {\r\n        type: String,\r\n        required: true,\r\n        unique: true\r\n    },\r\n    password: {\r\n        type: String,\r\n        required: true,\r\n        trim: true\r\n    },\r\n    isactive: Boolean,\r\n    createddate: Date,\r\n    updateddate: Date\r\n});\r\n\r\nuserSchema.pre('save', function (next) {\r\n    console.log('userSchema pre calling');\r\n    var currentDate = new Date();\r\n    this.updateddate = currentDate;\r\n    if (this.createddate == undefined) {\r\n        this.createddate = currentDate;\r\n    }\r\n    this.password = bcrypt.hashSync(this.password, saltRound);\r\n    next();\r\n});\r\n\r\nmodule.exports = mongoose.model('user', userSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1550744419375
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\routes\\\\customer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-self",
      "filename": "D:\\NodeJsTraining\\node-training-self\\src\\routes\\customer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-self",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-self\\src\\routes\\customer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-self\\src\\routes\\customer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\routes",
        "sourceFileName": "customer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _customer = _interopRequireDefault(require(\"../models/customer.model\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar jwt = require('jsonwebtoken');\n\nvar config = require('../../config.json');\n\nvar router = _express.default.Router(); // Get method with JWT verification\n\n\nrouter.get('/notsecure', function (req, res) {\n  res.send('Not secure - Ok');\n}); // Get method with JWT verification\n\nrouter.post('/secure', function (req, res) {\n  jwt.verify(req.headers['x-access-token'], config.secret, function (err, decoded) {\n    if (err) {\n      res.send('Err - secure - NOT Ok');\n    } else {\n      res.send('secure - Ok');\n    }\n  });\n}); // Get all customers Get API\n\nrouter.get('', function (req, res) {\n  _customer.default.find().then(function (doc) {\n    res.status(201).send(doc);\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // Add new customer POST API\n\nrouter.post('', function (req, res) {\n  if (Object.keys(req.body).length === 0) {\n    return res.status(400).send('Request body is missing');\n  }\n\n  var model = new _customer.default(req.body);\n  model.save().then(function (doc) {\n    if (!doc || doc.length === 0) {\n      return res.status(500).send(doc);\n    }\n\n    res.status(201).send(doc);\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // Get single customer Get API\n\nrouter.get('/ByEmail', function (req, res) {\n  _customer.default.findOne({\n    email: req.query.email\n  }).then(function (doc) {\n    res.status(201).send(doc);\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // Update customer PUT API\n\nrouter.put('', function (req, res) {\n  if (Object.keys(req.body).length === 0) {\n    res.status(400).send('Request body is missing');\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbWVyLmpzIl0sIm5hbWVzIjpbImp3dCIsInJlcXVpcmUiLCJjb25maWciLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsInBvc3QiLCJ2ZXJpZnkiLCJoZWFkZXJzIiwic2VjcmV0IiwiZXJyIiwiZGVjb2RlZCIsImN1c3RvbWVyTW9kZWwiLCJmaW5kIiwidGhlbiIsImRvYyIsInN0YXR1cyIsImNhdGNoIiwianNvbiIsIk9iamVjdCIsImtleXMiLCJib2R5IiwibGVuZ3RoIiwibW9kZWwiLCJzYXZlIiwiZmluZE9uZSIsImVtYWlsIiwicXVlcnkiLCJwdXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBQ0EsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsY0FBRCxDQUFuQjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF0Qjs7QUFFQSxJQUFJRSxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWIsQyxDQUVBOzs7QUFDQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsWUFBWCxFQUF5QixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNuQ0EsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsaUJBQVQ7QUFDSCxDQUZELEUsQ0FLQTs7QUFDQU4sTUFBTSxDQUFDTyxJQUFQLENBQVksU0FBWixFQUF1QixVQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQ1IsRUFBQUEsR0FBRyxDQUFDVyxNQUFKLENBQVdKLEdBQUcsQ0FBQ0ssT0FBSixDQUFZLGdCQUFaLENBQVgsRUFBMENWLE1BQU0sQ0FBQ1csTUFBakQsRUFBeUQsVUFBVUMsR0FBVixFQUFlQyxPQUFmLEVBQXdCO0FBQzdFLFFBQUlELEdBQUosRUFBUztBQUNMTixNQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyx1QkFBVDtBQUNILEtBRkQsTUFFTztBQUNIRCxNQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxhQUFUO0FBQ0g7QUFDSixHQU5EO0FBT0gsQ0FSRCxFLENBV0E7O0FBQ0FOLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEVBQVgsRUFBZSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN6QlEsb0JBQWNDLElBQWQsR0FDS0MsSUFETCxDQUNVLFVBQUFDLEdBQUcsRUFBSTtBQUNUWCxJQUFBQSxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCWCxJQUFoQixDQUFxQlUsR0FBckI7QUFDSCxHQUhMLEVBSUtFLEtBSkwsQ0FJVyxVQUFBUCxHQUFHLEVBQUk7QUFDVk4sSUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkUsSUFBaEIsQ0FBcUJSLEdBQXJCO0FBQ0gsR0FOTDtBQU9ILENBUkQsRSxDQVVBOztBQUNBWCxNQUFNLENBQUNPLElBQVAsQ0FBWSxFQUFaLEVBQWdCLFVBQUNILEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzFCLE1BQUllLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZakIsR0FBRyxDQUFDa0IsSUFBaEIsRUFBc0JDLE1BQXRCLEtBQWlDLENBQXJDLEVBQXdDO0FBQ3BDLFdBQU9sQixHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCWCxJQUFoQixDQUFxQix5QkFBckIsQ0FBUDtBQUNIOztBQUVELE1BQUlrQixLQUFLLEdBQUcsSUFBSVgsaUJBQUosQ0FBa0JULEdBQUcsQ0FBQ2tCLElBQXRCLENBQVo7QUFDQUUsRUFBQUEsS0FBSyxDQUFDQyxJQUFOLEdBQ0tWLElBREwsQ0FDVSxVQUFDQyxHQUFELEVBQVM7QUFDWCxRQUFJLENBQUNBLEdBQUQsSUFBUUEsR0FBRyxDQUFDTyxNQUFKLEtBQWUsQ0FBM0IsRUFBOEI7QUFDMUIsYUFBT2xCLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JYLElBQWhCLENBQXFCVSxHQUFyQixDQUFQO0FBQ0g7O0FBQ0RYLElBQUFBLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JYLElBQWhCLENBQXFCVSxHQUFyQjtBQUNILEdBTkwsRUFNT0UsS0FOUCxDQU1hLFVBQUNQLEdBQUQsRUFBUztBQUNkTixJQUFBQSxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCRSxJQUFoQixDQUFxQlIsR0FBckI7QUFDSCxHQVJMO0FBU0gsQ0FmRCxFLENBaUJBOztBQUNBWCxNQUFNLENBQUNHLEdBQVAsQ0FBVyxVQUFYLEVBQXVCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pDUSxvQkFBY2EsT0FBZCxDQUFzQjtBQUNkQyxJQUFBQSxLQUFLLEVBQUV2QixHQUFHLENBQUN3QixLQUFKLENBQVVEO0FBREgsR0FBdEIsRUFHS1osSUFITCxDQUdVLFVBQUFDLEdBQUcsRUFBSTtBQUNUWCxJQUFBQSxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCWCxJQUFoQixDQUFxQlUsR0FBckI7QUFDSCxHQUxMLEVBTUtFLEtBTkwsQ0FNVyxVQUFBUCxHQUFHLEVBQUk7QUFDVk4sSUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkUsSUFBaEIsQ0FBcUJSLEdBQXJCO0FBQ0gsR0FSTDtBQVNILENBVkQsRSxDQVlBOztBQUNBWCxNQUFNLENBQUM2QixHQUFQLENBQVcsRUFBWCxFQUFlLFVBQUN6QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN6QixNQUFJZSxNQUFNLENBQUNDLElBQVAsQ0FBWWpCLEdBQUcsQ0FBQ2tCLElBQWhCLEVBQXNCQyxNQUF0QixLQUFpQyxDQUFyQyxFQUF3QztBQUNwQ2xCLElBQUFBLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JYLElBQWhCLENBQXFCLHlCQUFyQjtBQUNIO0FBRUosQ0FMRDtBQVNBd0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCL0IsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXE5vZGVKc1RyYWluaW5nXFxub2RlLXRyYWluaW5nLXNlbGZcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGN1c3RvbWVyTW9kZWwgZnJvbSAnLi4vbW9kZWxzL2N1c3RvbWVyLm1vZGVsJztcclxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmNvbnN0IGp3dCA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xyXG5jb25zdCBjb25maWcgPSByZXF1aXJlKCcuLi8uLi9jb25maWcuanNvbicpO1xyXG5cclxubGV0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG4vLyBHZXQgbWV0aG9kIHdpdGggSldUIHZlcmlmaWNhdGlvblxyXG5yb3V0ZXIuZ2V0KCcvbm90c2VjdXJlJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc2VuZCgnTm90IHNlY3VyZSAtIE9rJyk7XHJcbn0pO1xyXG5cclxuXHJcbi8vIEdldCBtZXRob2Qgd2l0aCBKV1QgdmVyaWZpY2F0aW9uXHJcbnJvdXRlci5wb3N0KCcvc2VjdXJlJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBqd3QudmVyaWZ5KHJlcS5oZWFkZXJzWyd4LWFjY2Vzcy10b2tlbiddLCBjb25maWcuc2VjcmV0LCBmdW5jdGlvbiAoZXJyLCBkZWNvZGVkKSB7XHJcbiAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICByZXMuc2VuZCgnRXJyIC0gc2VjdXJlIC0gTk9UIE9rJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmVzLnNlbmQoJ3NlY3VyZSAtIE9rJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxufSk7XHJcblxyXG5cclxuLy8gR2V0IGFsbCBjdXN0b21lcnMgR2V0IEFQSVxyXG5yb3V0ZXIuZ2V0KCcnLCAocmVxLCByZXMpID0+IHtcclxuICAgIGN1c3RvbWVyTW9kZWwuZmluZCgpXHJcbiAgICAgICAgLnRoZW4oZG9jID0+IHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDEpLnNlbmQoZG9jKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaChlcnIgPT4ge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbihlcnIpO1xyXG4gICAgICAgIH0pO1xyXG59KTtcclxuXHJcbi8vIEFkZCBuZXcgY3VzdG9tZXIgUE9TVCBBUElcclxucm91dGVyLnBvc3QoJycsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgaWYgKE9iamVjdC5rZXlzKHJlcS5ib2R5KS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoJ1JlcXVlc3QgYm9keSBpcyBtaXNzaW5nJyk7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IG1vZGVsID0gbmV3IGN1c3RvbWVyTW9kZWwocmVxLmJvZHkpO1xyXG4gICAgbW9kZWwuc2F2ZSgpXHJcbiAgICAgICAgLnRoZW4oKGRvYykgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIWRvYyB8fCBkb2MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZG9jKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMSkuc2VuZChkb2MpO1xyXG4gICAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oZXJyKTtcclxuICAgICAgICB9KTtcclxufSk7XHJcblxyXG4vLyBHZXQgc2luZ2xlIGN1c3RvbWVyIEdldCBBUElcclxucm91dGVyLmdldCgnL0J5RW1haWwnLCAocmVxLCByZXMpID0+IHtcclxuICAgIGN1c3RvbWVyTW9kZWwuZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGVtYWlsOiByZXEucXVlcnkuZW1haWxcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKGRvYyA9PiB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5zZW5kKGRvYyk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goZXJyID0+IHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oZXJyKTtcclxuICAgICAgICB9KTtcclxufSk7XHJcblxyXG4vLyBVcGRhdGUgY3VzdG9tZXIgUFVUIEFQSVxyXG5yb3V0ZXIucHV0KCcnLCAocmVxLCByZXMpID0+IHtcclxuICAgIGlmIChPYmplY3Qua2V5cyhyZXEuYm9keSkubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoJ1JlcXVlc3QgYm9keSBpcyBtaXNzaW5nJyk7XHJcbiAgICB9XHJcblxyXG59KTtcclxuXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "customer.js"
      ],
      "names": [
        "jwt",
        "require",
        "config",
        "router",
        "express",
        "Router",
        "get",
        "req",
        "res",
        "send",
        "post",
        "verify",
        "headers",
        "secret",
        "err",
        "decoded",
        "customerModel",
        "find",
        "then",
        "doc",
        "status",
        "catch",
        "json",
        "Object",
        "keys",
        "body",
        "length",
        "model",
        "save",
        "findOne",
        "email",
        "query",
        "put",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;;;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,mBAAD,CAAtB;;AAEA,IAAIE,MAAM,GAAGC,iBAAQC,MAAR,EAAb,C,CAEA;;;AACAF,MAAM,CAACG,GAAP,CAAW,YAAX,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCA,EAAAA,GAAG,CAACC,IAAJ,CAAS,iBAAT;AACH,CAFD,E,CAKA;;AACAN,MAAM,CAACO,IAAP,CAAY,SAAZ,EAAuB,UAACH,GAAD,EAAMC,GAAN,EAAc;AACjCR,EAAAA,GAAG,CAACW,MAAJ,CAAWJ,GAAG,CAACK,OAAJ,CAAY,gBAAZ,CAAX,EAA0CV,MAAM,CAACW,MAAjD,EAAyD,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AAC7E,QAAID,GAAJ,EAAS;AACLN,MAAAA,GAAG,CAACC,IAAJ,CAAS,uBAAT;AACH,KAFD,MAEO;AACHD,MAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACH;AACJ,GAND;AAOH,CARD,E,CAWA;;AACAN,MAAM,CAACG,GAAP,CAAW,EAAX,EAAe,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBQ,oBAAcC,IAAd,GACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACTX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqBU,GAArB;AACH,GAHL,EAIKE,KAJL,CAIW,UAAAP,GAAG,EAAI;AACVN,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBR,GAArB;AACH,GANL;AAOH,CARD,E,CAUA;;AACAX,MAAM,CAACO,IAAP,CAAY,EAAZ,EAAgB,UAACH,GAAD,EAAMC,GAAN,EAAc;AAC1B,MAAIe,MAAM,CAACC,IAAP,CAAYjB,GAAG,CAACkB,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,WAAOlB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB,yBAArB,CAAP;AACH;;AAED,MAAIkB,KAAK,GAAG,IAAIX,iBAAJ,CAAkBT,GAAG,CAACkB,IAAtB,CAAZ;AACAE,EAAAA,KAAK,CAACC,IAAN,GACKV,IADL,CACU,UAACC,GAAD,EAAS;AACX,QAAI,CAACA,GAAD,IAAQA,GAAG,CAACO,MAAJ,KAAe,CAA3B,EAA8B;AAC1B,aAAOlB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqBU,GAArB,CAAP;AACH;;AACDX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqBU,GAArB;AACH,GANL,EAMOE,KANP,CAMa,UAACP,GAAD,EAAS;AACdN,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBR,GAArB;AACH,GARL;AASH,CAfD,E,CAiBA;;AACAX,MAAM,CAACG,GAAP,CAAW,UAAX,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCQ,oBAAca,OAAd,CAAsB;AACdC,IAAAA,KAAK,EAAEvB,GAAG,CAACwB,KAAJ,CAAUD;AADH,GAAtB,EAGKZ,IAHL,CAGU,UAAAC,GAAG,EAAI;AACTX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqBU,GAArB;AACH,GALL,EAMKE,KANL,CAMW,UAAAP,GAAG,EAAI;AACVN,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBR,GAArB;AACH,GARL;AASH,CAVD,E,CAYA;;AACAX,MAAM,CAAC6B,GAAP,CAAW,EAAX,EAAe,UAACzB,GAAD,EAAMC,GAAN,EAAc;AACzB,MAAIe,MAAM,CAACC,IAAP,CAAYjB,GAAG,CAACkB,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpClB,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB,yBAArB;AACH;AAEJ,CALD;AASAwB,MAAM,CAACC,OAAP,GAAiB/B,MAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\routes",
      "sourcesContent": [
        "import customerModel from '../models/customer.model';\r\nimport express from 'express';\r\nconst jwt = require('jsonwebtoken');\r\nconst config = require('../../config.json');\r\n\r\nlet router = express.Router();\r\n\r\n// Get method with JWT verification\r\nrouter.get('/notsecure', (req, res) => {\r\n    res.send('Not secure - Ok');\r\n});\r\n\r\n\r\n// Get method with JWT verification\r\nrouter.post('/secure', (req, res) => {\r\n    jwt.verify(req.headers['x-access-token'], config.secret, function (err, decoded) {\r\n        if (err) {\r\n            res.send('Err - secure - NOT Ok');\r\n        } else {\r\n            res.send('secure - Ok');\r\n        }\r\n    })\r\n});\r\n\r\n\r\n// Get all customers Get API\r\nrouter.get('', (req, res) => {\r\n    customerModel.find()\r\n        .then(doc => {\r\n            res.status(201).send(doc);\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Add new customer POST API\r\nrouter.post('', (req, res) => {\r\n    if (Object.keys(req.body).length === 0) {\r\n        return res.status(400).send('Request body is missing');\r\n    }\r\n\r\n    let model = new customerModel(req.body);\r\n    model.save()\r\n        .then((doc) => {\r\n            if (!doc || doc.length === 0) {\r\n                return res.status(500).send(doc);\r\n            }\r\n            res.status(201).send(doc);\r\n        }).catch((err) => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Get single customer Get API\r\nrouter.get('/ByEmail', (req, res) => {\r\n    customerModel.findOne({\r\n            email: req.query.email\r\n        })\r\n        .then(doc => {\r\n            res.status(201).send(doc);\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Update customer PUT API\r\nrouter.put('', (req, res) => {\r\n    if (Object.keys(req.body).length === 0) {\r\n        res.status(400).send('Request body is missing');\r\n    }\r\n\r\n});\r\n\r\n\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1550730249489
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\models\\\\customer.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-self",
      "filename": "D:\\NodeJsTraining\\node-training-self\\src\\models\\customer.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-self",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-self\\src\\models\\customer.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-self\\src\\models\\customer.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\models",
        "sourceFileName": "customer.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar customerSchema = new _mongoose.default.Schema({\n  name: String,\n  email: {\n    type: String,\n    require: true,\n    unique: true\n  }\n});\nmodule.exports = _mongoose.default.model('customer', customerSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbWVyLm1vZGVsLmpzIl0sIm5hbWVzIjpbImN1c3RvbWVyU2NoZW1hIiwibW9uZ29vc2UiLCJTY2hlbWEiLCJuYW1lIiwiU3RyaW5nIiwiZW1haWwiLCJ0eXBlIiwicmVxdWlyZSIsInVuaXF1ZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBLElBQUlBLGNBQWMsR0FBRyxJQUFJQyxrQkFBU0MsTUFBYixDQUFvQjtBQUNyQ0MsRUFBQUEsSUFBSSxFQUFFQyxNQUQrQjtBQUVyQ0MsRUFBQUEsS0FBSyxFQUFFO0FBQ0hDLElBQUFBLElBQUksRUFBRUYsTUFESDtBQUVIRyxJQUFBQSxPQUFPLEVBQUUsSUFGTjtBQUdIQyxJQUFBQSxNQUFNLEVBQUU7QUFITDtBQUY4QixDQUFwQixDQUFyQjtBQVNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULGtCQUFTVSxLQUFULENBQWUsVUFBZixFQUEyQlgsY0FBM0IsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXE5vZGVKc1RyYWluaW5nXFxub2RlLXRyYWluaW5nLXNlbGZcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxubGV0IGN1c3RvbWVyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICBuYW1lOiBTdHJpbmcsXHJcbiAgICBlbWFpbDoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlOiB0cnVlLFxyXG4gICAgICAgIHVuaXF1ZTogdHJ1ZVxyXG4gICAgfVxyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoJ2N1c3RvbWVyJywgY3VzdG9tZXJTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "customer.model.js"
      ],
      "names": [
        "customerSchema",
        "mongoose",
        "Schema",
        "name",
        "String",
        "email",
        "type",
        "require",
        "unique",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAIA,cAAc,GAAG,IAAIC,kBAASC,MAAb,CAAoB;AACrCC,EAAAA,IAAI,EAAEC,MAD+B;AAErCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEF,MADH;AAEHG,IAAAA,OAAO,EAAE,IAFN;AAGHC,IAAAA,MAAM,EAAE;AAHL;AAF8B,CAApB,CAArB;AASAC,MAAM,CAACC,OAAP,GAAiBT,kBAASU,KAAT,CAAe,UAAf,EAA2BX,cAA3B,CAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\nlet customerSchema = new mongoose.Schema({\r\n    name: String,\r\n    email: {\r\n        type: String,\r\n        require: true,\r\n        unique: true\r\n    }\r\n});\r\n\r\nmodule.exports = mongoose.model('customer', customerSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1550569116966
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\src\\\\routes\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-self",
      "filename": "D:\\NodeJsTraining\\node-training-self\\src\\routes\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-self",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-self\\src\\routes\\user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-self\\src\\routes\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\routes",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user.model\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../../config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express.default.Router(); // Login with user\n\n\nrouter.post('/login', function (req, res, next) {\n  console.log('post to login user');\n\n  if (Object.keys(req.body).length === 0) {\n    return res.status(400).json({\n      status: \"error\",\n      message: \"Request body is missing!\"\n    });\n  }\n\n  _user.default.findOne({\n    username: req.body.username\n  }, function (err, userDetails) {\n    if (err) {\n      next(err);\n    } else {\n      if (_bcrypt.default.compareSync(req.body.password, userDetails.password)) {\n        // generate JWT token\n        var user = {\n          \"username\": req.body.username,\n          \"password\": req.body.password\n        };\n\n        var token = _jsonwebtoken.default.sign(user, _config.default.secret, {\n          expiresIn: _config.default.tokenLife\n        });\n\n        var refreshToken = _jsonwebtoken.default.sign(user, _config.default.refreshTokenSecret, {\n          expiresIn: _config.default.refreshTokenLife\n        }); //tokenList[refreshToken] = response\n\n\n        var tokenDetails = {\n          \"status\": \"User login\",\n          \"token\": token,\n          \"refreshToken\": refreshToken\n        }; // return success\n\n        res.status(200).json({\n          status: \"success\",\n          message: \"Login successfully\",\n          data: {\n            user: userDetails,\n            token: tokenDetails\n          }\n        });\n      } else {\n        // login fail\n        res.status(200).json({\n          status: \"error\",\n          message: \"Invalid credentials\",\n          data: null\n        });\n      }\n    }\n  });\n}); // Create new user\n\nrouter.post('', function (req, res, next) {\n  console.log('post to create user');\n\n  if (Object.keys(req.body).length === 0) {\n    return res.status(400).send('Request body is missing');\n  }\n\n  var model = new _user.default({\n    name: req.body.name,\n    username: req.body.username,\n    password: req.body.password,\n    isactive: req.body.isactive\n  });\n  model.save().then(function (doc) {\n    if (!doc || doc.length === 0) {\n      return res.status(500).send(doc);\n    }\n\n    res.status(201).send(doc);\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // JWT secure validation\n\nrouter.use(require('../../tokenChecker')); // Get all user\n\nrouter.get('', function (req, res, next) {\n  console.log('call get all user');\n\n  _user.default.find().then(function (result) {\n    res.status(200).send(result);\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // Get user details\n\nrouter.get('/getuser', function (req, res, next) {\n  _user.default.findOne({\n    username: req.query.username\n  }).then(function (doc) {\n    res.status(201).send(doc);\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // Update existing user\n\nrouter.put('', function (req, res, next) {\n  console.log('put to update existing user');\n\n  if (Object.keys(req.body).length === 0) {\n    return res.status(400).send('Request body is missing');\n  }\n\n  _user.default.findOneAndUpdate({\n    username: req.query.username\n  }, req.body, {\n    new: true\n  }).then(function (result) {\n    res.status(200).json({\n      status: \"success\",\n      message: \"Record updated successfully.\",\n      data: result\n    });\n  }).catch(function (err) {\n    res.status(500).send(err);\n  });\n}); // Delete a user - delete api\n\nrouter.delete('', function (req, res) {\n  _user.default.findOneAndRemove({\n    username: req.query.username\n  }).then(function (doc) {\n    res.status(200).json({\n      status: \"success\",\n      message: \"Record deleted successfully.\",\n      data: doc\n    });\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "req",
        "res",
        "next",
        "console",
        "log",
        "Object",
        "keys",
        "body",
        "length",
        "status",
        "json",
        "message",
        "userModel",
        "findOne",
        "username",
        "err",
        "userDetails",
        "bcrypt",
        "compareSync",
        "password",
        "user",
        "token",
        "jwt",
        "sign",
        "config",
        "secret",
        "expiresIn",
        "tokenLife",
        "refreshToken",
        "refreshTokenSecret",
        "refreshTokenLife",
        "tokenDetails",
        "data",
        "send",
        "model",
        "name",
        "isactive",
        "save",
        "then",
        "doc",
        "catch",
        "use",
        "require",
        "get",
        "find",
        "result",
        "query",
        "put",
        "findOneAndUpdate",
        "new",
        "delete",
        "findOneAndRemove",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf,C,CAEA;;;AACAF,MAAM,CAACG,IAAP,CAAY,QAAZ,EAAsB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYN,GAAG,CAACO,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,WAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,MAAAA,MAAM,EAAE,OADgB;AAExBE,MAAAA,OAAO,EAAE;AAFe,KAArB,CAAP;AAIH;;AAEDC,gBAAUC,OAAV,CAAkB;AACdC,IAAAA,QAAQ,EAAEd,GAAG,CAACO,IAAJ,CAASO;AADL,GAAlB,EAEG,UAAUC,GAAV,EAAeC,WAAf,EAA4B;AAC3B,QAAID,GAAJ,EAAS;AACLb,MAAAA,IAAI,CAACa,GAAD,CAAJ;AACH,KAFD,MAEO;AACH,UAAIE,gBAAOC,WAAP,CAAmBlB,GAAG,CAACO,IAAJ,CAASY,QAA5B,EAAsCH,WAAW,CAACG,QAAlD,CAAJ,EAAiE;AAE7D;AACA,YAAMC,IAAI,GAAG;AACT,sBAAYpB,GAAG,CAACO,IAAJ,CAASO,QADZ;AAET,sBAAYd,GAAG,CAACO,IAAJ,CAASY;AAFZ,SAAb;;AAIA,YAAME,KAAK,GAAGC,sBAAIC,IAAJ,CAASH,IAAT,EAAeI,gBAAOC,MAAtB,EAA8B;AACxCC,UAAAA,SAAS,EAAEF,gBAAOG;AADsB,SAA9B,CAAd;;AAGA,YAAMC,YAAY,GAAGN,sBAAIC,IAAJ,CAASH,IAAT,EAAeI,gBAAOK,kBAAtB,EAA0C;AAC3DH,UAAAA,SAAS,EAAEF,gBAAOM;AADyC,SAA1C,CAArB,CAV6D,CAa7D;;;AACA,YAAMC,YAAY,GAAG;AACjB,oBAAU,YADO;AAEjB,mBAASV,KAFQ;AAGjB,0BAAgBO;AAHC,SAArB,CAd6D,CAmB7D;;AACA3B,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,UAAAA,MAAM,EAAE,SADS;AAEjBE,UAAAA,OAAO,EAAE,oBAFQ;AAGjBqB,UAAAA,IAAI,EAAE;AACFZ,YAAAA,IAAI,EAAEJ,WADJ;AAEFK,YAAAA,KAAK,EAAEU;AAFL;AAHW,SAArB;AAQH,OA5BD,MA4BO;AACH;AACA9B,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,UAAAA,MAAM,EAAE,OADS;AAEjBE,UAAAA,OAAO,EAAE,qBAFQ;AAGjBqB,UAAAA,IAAI,EAAE;AAHW,SAArB;AAKH;AACJ;AACJ,GA3CD;AA4CH,CArDD,E,CAuDA;;AACApC,MAAM,CAACG,IAAP,CAAY,EAAZ,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYN,GAAG,CAACO,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,WAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqB,yBAArB,CAAP;AACH;;AAED,MAAIC,KAAK,GAAG,IAAItB,aAAJ,CAAc;AACtBuB,IAAAA,IAAI,EAAEnC,GAAG,CAACO,IAAJ,CAAS4B,IADO;AAEtBrB,IAAAA,QAAQ,EAAEd,GAAG,CAACO,IAAJ,CAASO,QAFG;AAGtBK,IAAAA,QAAQ,EAAEnB,GAAG,CAACO,IAAJ,CAASY,QAHG;AAItBiB,IAAAA,QAAQ,EAAEpC,GAAG,CAACO,IAAJ,CAAS6B;AAJG,GAAd,CAAZ;AAMAF,EAAAA,KAAK,CAACG,IAAN,GACKC,IADL,CACU,UAACC,GAAD,EAAS;AACX,QAAI,CAACA,GAAD,IAAQA,GAAG,CAAC/B,MAAJ,KAAe,CAA3B,EAA8B;AAC1B,aAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqBM,GAArB,CAAP;AACH;;AACDtC,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqBM,GAArB;AACH,GANL,EAMOC,KANP,CAMa,UAACzB,GAAD,EAAS;AACdd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,GAArB;AACH,GARL;AASH,CArBD,E,CAuBA;;AACAnB,MAAM,CAAC6C,GAAP,CAAWC,OAAO,CAAC,oBAAD,CAAlB,E,CAEA;;AACA9C,MAAM,CAAC+C,GAAP,CAAW,EAAX,EAAe,UAAU3C,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACAQ,gBAAUgC,IAAV,GACKN,IADL,CACU,UAAAO,MAAM,EAAI;AACZ5C,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqBY,MAArB;AACH,GAHL,EAIKL,KAJL,CAIW,UAAAzB,GAAG,EAAI;AACVd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,GAArB;AACH,GANL;AAOH,CATD,E,CAWA;;AACAnB,MAAM,CAAC+C,GAAP,CAAW,UAAX,EAAuB,UAAU3C,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7CU,gBAAUC,OAAV,CAAkB;AACVC,IAAAA,QAAQ,EAAEd,GAAG,CAAC8C,KAAJ,CAAUhC;AADV,GAAlB,EAGKwB,IAHL,CAGU,UAAAC,GAAG,EAAI;AACTtC,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqBM,GAArB;AACH,GALL,EAMKC,KANL,CAMW,UAAAzB,GAAG,EAAI;AACVd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,GAArB;AACH,GARL;AASH,CAVD,E,CAYA;;AACAnB,MAAM,CAACmD,GAAP,CAAW,EAAX,EAAe,UAAU/C,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYN,GAAG,CAACO,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,WAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqB,yBAArB,CAAP;AACH;;AAEDrB,gBAAUoC,gBAAV,CAA2B;AACnBlC,IAAAA,QAAQ,EAAEd,GAAG,CAAC8C,KAAJ,CAAUhC;AADD,GAA3B,EAEOd,GAAG,CAACO,IAFX,EAEiB;AACT0C,IAAAA,GAAG,EAAE;AADI,GAFjB,EAKKX,IALL,CAKU,UAAAO,MAAM,EAAI;AACZ5C,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,MAAAA,MAAM,EAAE,SADS;AAEjBE,MAAAA,OAAO,EAAE,8BAFQ;AAGjBqB,MAAAA,IAAI,EAAEa;AAHW,KAArB;AAKH,GAXL,EAYKL,KAZL,CAYW,UAAAzB,GAAG,EAAI;AACVd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqBlB,GAArB;AACH,GAdL;AAeH,CArBD,E,CAuBA;;AACAnB,MAAM,CAACsD,MAAP,CAAc,EAAd,EAAkB,UAAClD,GAAD,EAAMC,GAAN,EAAc;AAC5BW,gBAAUuC,gBAAV,CAA2B;AACnBrC,IAAAA,QAAQ,EAAEd,GAAG,CAAC8C,KAAJ,CAAUhC;AADD,GAA3B,EAGKwB,IAHL,CAGU,UAAAC,GAAG,EAAI;AACTtC,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,MAAAA,MAAM,EAAE,SADS;AAEjBE,MAAAA,OAAO,EAAE,8BAFQ;AAGjBqB,MAAAA,IAAI,EAAEO;AAHW,KAArB;AAKH,GATL,EAUKC,KAVL,CAUW,UAAAzB,GAAG,EAAI;AACVd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,GAArB;AACH,GAZL;AAaH,CAdD;AAgBAqC,MAAM,CAACC,OAAP,GAAiBzD,MAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\r\nimport userModel from '../models/user.model';\r\nimport bcrypt from 'bcrypt'\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../../config.json';\r\n\r\nconst router = express.Router();\r\n\r\n// Login with user\r\nrouter.post('/login', function (req, res, next) {\r\n    console.log('post to login user');\r\n    if (Object.keys(req.body).length === 0) {\r\n        return res.status(400).json({\r\n            status: \"error\",\r\n            message: \"Request body is missing!\"\r\n        });\r\n    }\r\n\r\n    userModel.findOne({\r\n        username: req.body.username\r\n    }, function (err, userDetails) {\r\n        if (err) {\r\n            next(err);\r\n        } else {\r\n            if (bcrypt.compareSync(req.body.password, userDetails.password)) {\r\n\r\n                // generate JWT token\r\n                const user = {\r\n                    \"username\": req.body.username,\r\n                    \"password\": req.body.password\r\n                };\r\n                const token = jwt.sign(user, config.secret, {\r\n                    expiresIn: config.tokenLife\r\n                });\r\n                const refreshToken = jwt.sign(user, config.refreshTokenSecret, {\r\n                    expiresIn: config.refreshTokenLife\r\n                });\r\n                //tokenList[refreshToken] = response\r\n                const tokenDetails = {\r\n                    \"status\": \"User login\",\r\n                    \"token\": token,\r\n                    \"refreshToken\": refreshToken\r\n                };\r\n                // return success\r\n                res.status(200).json({\r\n                    status: \"success\",\r\n                    message: \"Login successfully\",\r\n                    data: {\r\n                        user: userDetails,\r\n                        token: tokenDetails\r\n                    }\r\n                });\r\n            } else {\r\n                // login fail\r\n                res.status(200).json({\r\n                    status: \"error\",\r\n                    message: \"Invalid credentials\",\r\n                    data: null\r\n                });\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n// Create new user\r\nrouter.post('', function (req, res, next) {\r\n    console.log('post to create user');\r\n    if (Object.keys(req.body).length === 0) {\r\n        return res.status(400).send('Request body is missing');\r\n    }\r\n\r\n    let model = new userModel({\r\n        name: req.body.name,\r\n        username: req.body.username,\r\n        password: req.body.password,\r\n        isactive: req.body.isactive\r\n    });\r\n    model.save()\r\n        .then((doc) => {\r\n            if (!doc || doc.length === 0) {\r\n                return res.status(500).send(doc);\r\n            }\r\n            res.status(201).send(doc);\r\n        }).catch((err) => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// JWT secure validation\r\nrouter.use(require('../../tokenChecker'))\r\n\r\n// Get all user\r\nrouter.get('', function (req, res, next) {\r\n    console.log('call get all user');\r\n    userModel.find()\r\n        .then(result => {\r\n            res.status(200).send(result);\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Get user details\r\nrouter.get('/getuser', function (req, res, next) {\r\n    userModel.findOne({\r\n            username: req.query.username\r\n        })\r\n        .then(doc => {\r\n            res.status(201).send(doc);\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Update existing user\r\nrouter.put('', function (req, res, next) {\r\n    console.log('put to update existing user');\r\n    if (Object.keys(req.body).length === 0) {\r\n        return res.status(400).send('Request body is missing');\r\n    }\r\n\r\n    userModel.findOneAndUpdate({\r\n            username: req.query.username\r\n        }, req.body, {\r\n            new: true\r\n        })\r\n        .then(result => {\r\n            res.status(200).json({\r\n                status: \"success\",\r\n                message: \"Record updated successfully.\",\r\n                data: result\r\n            })\r\n        })\r\n        .catch(err => {\r\n            res.status(500).send(err);\r\n        });\r\n});\r\n\r\n// Delete a user - delete api\r\nrouter.delete('', (req, res) => {\r\n    userModel.findOneAndRemove({\r\n            username: req.query.username\r\n        })\r\n        .then(doc => {\r\n            res.status(200).json({\r\n                status: \"success\",\r\n                message: \"Record deleted successfully.\",\r\n                data: doc\r\n            })\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1550744370659
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-self\\\\tokenChecker.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-self\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-self",
      "filename": "D:\\NodeJsTraining\\node-training-self\\tokenChecker.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-self",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-self\\tokenChecker.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-self\\tokenChecker.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-self",
        "sourceFileName": "tokenChecker.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"./config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = function (req, res, next) {\n  var token = req.body.token || req.query.token || req.headers['x-access-token']; // decode token\n\n  if (token) {\n    // verifies secret and checks exp\n    _jsonwebtoken.default.verify(token, _config.default.secret, function (err, decoded) {\n      if (err) {\n        return res.status(401).json({\n          \"error\": true,\n          \"message\": 'Unauthorized access.'\n        });\n      }\n\n      req.decoded = decoded;\n      next();\n    });\n  } else {\n    // if there is no token\n    // return an error\n    return res.status(403).send({\n      \"error\": true,\n      \"message\": 'No token provided.'\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRva2VuQ2hlY2tlci5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiYm9keSIsInF1ZXJ5IiwiaGVhZGVycyIsImp3dCIsInZlcmlmeSIsImNvbmZpZyIsInNlY3JldCIsImVyciIsImRlY29kZWQiLCJzdGF0dXMiLCJqc29uIiwic2VuZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDakMsTUFBTUMsS0FBSyxHQUFHSCxHQUFHLENBQUNJLElBQUosQ0FBU0QsS0FBVCxJQUFrQkgsR0FBRyxDQUFDSyxLQUFKLENBQVVGLEtBQTVCLElBQXFDSCxHQUFHLENBQUNNLE9BQUosQ0FBWSxnQkFBWixDQUFuRCxDQURpQyxDQUVqQzs7QUFDQSxNQUFJSCxLQUFKLEVBQVc7QUFDUDtBQUNBSSwwQkFBSUMsTUFBSixDQUFXTCxLQUFYLEVBQWtCTSxnQkFBT0MsTUFBekIsRUFBaUMsVUFBVUMsR0FBVixFQUFlQyxPQUFmLEVBQXdCO0FBQ3JELFVBQUlELEdBQUosRUFBUztBQUNMLGVBQU9WLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCLG1CQUFTLElBRGU7QUFFeEIscUJBQVc7QUFGYSxTQUFyQixDQUFQO0FBSUg7O0FBQ0RkLE1BQUFBLEdBQUcsQ0FBQ1ksT0FBSixHQUFjQSxPQUFkO0FBQ0FWLE1BQUFBLElBQUk7QUFDUCxLQVREO0FBVUgsR0FaRCxNQVlPO0FBQ0g7QUFDQTtBQUNBLFdBQU9ELEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JFLElBQWhCLENBQXFCO0FBQ3hCLGVBQVMsSUFEZTtBQUV4QixpQkFBVztBQUZhLEtBQXJCLENBQVA7QUFJSDtBQUNKLENBdkJEIiwic291cmNlUm9vdCI6IkQ6XFxOb2RlSnNUcmFpbmluZ1xcbm9kZS10cmFpbmluZy1zZWxmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4vY29uZmlnLmpzb24nO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSAocmVxLCByZXMsIG5leHQpID0+IHtcclxuICAgIGNvbnN0IHRva2VuID0gcmVxLmJvZHkudG9rZW4gfHwgcmVxLnF1ZXJ5LnRva2VuIHx8IHJlcS5oZWFkZXJzWyd4LWFjY2Vzcy10b2tlbiddXHJcbiAgICAvLyBkZWNvZGUgdG9rZW5cclxuICAgIGlmICh0b2tlbikge1xyXG4gICAgICAgIC8vIHZlcmlmaWVzIHNlY3JldCBhbmQgY2hlY2tzIGV4cFxyXG4gICAgICAgIGp3dC52ZXJpZnkodG9rZW4sIGNvbmZpZy5zZWNyZXQsIGZ1bmN0aW9uIChlcnIsIGRlY29kZWQpIHtcclxuICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICBcImVycm9yXCI6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJtZXNzYWdlXCI6ICdVbmF1dGhvcml6ZWQgYWNjZXNzLidcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJlcS5kZWNvZGVkID0gZGVjb2RlZDtcclxuICAgICAgICAgICAgbmV4dCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBpZiB0aGVyZSBpcyBubyB0b2tlblxyXG4gICAgICAgIC8vIHJldHVybiBhbiBlcnJvclxyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMykuc2VuZCh7XHJcbiAgICAgICAgICAgIFwiZXJyb3JcIjogdHJ1ZSxcclxuICAgICAgICAgICAgXCJtZXNzYWdlXCI6ICdObyB0b2tlbiBwcm92aWRlZC4nXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "tokenChecker.js"
      ],
      "names": [
        "module",
        "exports",
        "req",
        "res",
        "next",
        "token",
        "body",
        "query",
        "headers",
        "jwt",
        "verify",
        "config",
        "secret",
        "err",
        "decoded",
        "status",
        "json",
        "send"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,MAAMC,KAAK,GAAGH,GAAG,CAACI,IAAJ,CAASD,KAAT,IAAkBH,GAAG,CAACK,KAAJ,CAAUF,KAA5B,IAAqCH,GAAG,CAACM,OAAJ,CAAY,gBAAZ,CAAnD,CADiC,CAEjC;;AACA,MAAIH,KAAJ,EAAW;AACP;AACAI,0BAAIC,MAAJ,CAAWL,KAAX,EAAkBM,gBAAOC,MAAzB,EAAiC,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AACrD,UAAID,GAAJ,EAAS;AACL,eAAOV,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxB,mBAAS,IADe;AAExB,qBAAW;AAFa,SAArB,CAAP;AAIH;;AACDd,MAAAA,GAAG,CAACY,OAAJ,GAAcA,OAAd;AACAV,MAAAA,IAAI;AACP,KATD;AAUH,GAZD,MAYO;AACH;AACA;AACA,WAAOD,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACxB,eAAS,IADe;AAExB,iBAAW;AAFa,KAArB,CAAP;AAIH;AACJ,CAvBD",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-self",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\r\nimport config from './config.json';\r\n\r\nmodule.exports = (req, res, next) => {\r\n    const token = req.body.token || req.query.token || req.headers['x-access-token']\r\n    // decode token\r\n    if (token) {\r\n        // verifies secret and checks exp\r\n        jwt.verify(token, config.secret, function (err, decoded) {\r\n            if (err) {\r\n                return res.status(401).json({\r\n                    \"error\": true,\r\n                    \"message\": 'Unauthorized access.'\r\n                });\r\n            }\r\n            req.decoded = decoded;\r\n            next();\r\n        });\r\n    } else {\r\n        // if there is no token\r\n        // return an error\r\n        return res.status(403).send({\r\n            \"error\": true,\r\n            \"message\": 'No token provided.'\r\n        });\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550741303145
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-accessment",
      "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-accessment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-accessment\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../config.json\"));\n\nvar _databaseconnection = _interopRequireDefault(require(\"./db/databaseconnection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar tokenList = {};\nvar app = (0, _express.default)();\napp.use(_bodyParser.default.json());\n\nvar userRoute = require('./routes/user');\n\napp.use('/api/user', userRoute);\n\nvar blogRoute = require('./routes/blog');\n\napp.use('/api/blog', blogRoute);\napp.use(_express.default.static('public')); // Normal request\n\napp.use(function (req, res, next) {\n  console.log(\"\".concat(new Date().toString(), \" => \").concat(req.originalUrl, \" \").concat(req.body));\n  next();\n}); //Error handling\n//400 - Not found error\n\napp.use(function (req, res, next) {\n  res.status(404).send('Error - we think you are lost.');\n  next();\n}); //500 - Internal server error\n\napp.use(function (err, req, res, next) {\n  console.log(err.stack);\n  res.sendFile(_path.default.join(__dirname, '../public/500.html'));\n  next();\n});\nvar PORT = process.env.PORT || 3001;\napp.listen(PORT, function () {\n  return console.info(\"Server has started on \".concat(PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInRva2VuTGlzdCIsImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwidXNlclJvdXRlIiwicmVxdWlyZSIsImJsb2dSb3V0ZSIsImV4cHJlc3MiLCJzdGF0aWMiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY29uc29sZSIsImxvZyIsIkRhdGUiLCJ0b1N0cmluZyIsIm9yaWdpbmFsVXJsIiwiYm9keSIsInN0YXR1cyIsInNlbmQiLCJlcnIiLCJzdGFjayIsInNlbmRGaWxlIiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJQT1JUIiwicHJvY2VzcyIsImVudiIsImxpc3RlbiIsImluZm8iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUcsRUFBbEI7QUFFQSxJQUFJQyxHQUFHLEdBQUcsdUJBQVY7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLG9CQUFXQyxJQUFYLEVBQVI7O0FBRUEsSUFBSUMsU0FBUyxHQUFHQyxPQUFPLENBQUMsZUFBRCxDQUF2Qjs7QUFDQUwsR0FBRyxDQUFDQyxHQUFKLENBQVEsV0FBUixFQUFxQkcsU0FBckI7O0FBRUEsSUFBSUUsU0FBUyxHQUFHRCxPQUFPLENBQUMsZUFBRCxDQUF2Qjs7QUFDQUwsR0FBRyxDQUFDQyxHQUFKLENBQVEsV0FBUixFQUFxQkssU0FBckI7QUFFQU4sR0FBRyxDQUFDQyxHQUFKLENBQVFNLGlCQUFRQyxNQUFSLENBQWUsUUFBZixDQUFSLEUsQ0FFQTs7QUFDQVIsR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBQ1EsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDeEJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixXQUFlLElBQUlDLElBQUosR0FBV0MsUUFBWCxFQUFmLGlCQUEyQ04sR0FBRyxDQUFDTyxXQUEvQyxjQUE4RFAsR0FBRyxDQUFDUSxJQUFsRTtBQUNBTixFQUFBQSxJQUFJO0FBQ1AsQ0FIRCxFLENBS0E7QUFFQTs7QUFDQVgsR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBQ1EsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDeEJELEVBQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLGdDQUFyQjtBQUNBUixFQUFBQSxJQUFJO0FBQ1AsQ0FIRCxFLENBS0E7O0FBQ0FYLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQUNtQixHQUFELEVBQU1YLEdBQU4sRUFBV0MsR0FBWCxFQUFnQkMsSUFBaEIsRUFBeUI7QUFDN0JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTyxHQUFHLENBQUNDLEtBQWhCO0FBQ0FYLEVBQUFBLEdBQUcsQ0FBQ1ksUUFBSixDQUFhQyxjQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsb0JBQXJCLENBQWI7QUFDQWQsRUFBQUEsSUFBSTtBQUNQLENBSkQ7QUFNQSxJQUFNZSxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFaLElBQW9CLElBQWpDO0FBQ0ExQixHQUFHLENBQUM2QixNQUFKLENBQVdILElBQVgsRUFBaUI7QUFBQSxTQUFNZCxPQUFPLENBQUNrQixJQUFSLGlDQUFzQ0osSUFBdEMsRUFBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxOb2RlSnNUcmFpbmluZ1xcbm9kZS10cmFpbmluZy1hY2Nlc3NtZW50XFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XHJcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcclxuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZy5qc29uJ1xyXG5pbXBvcnQgZGJDb25uZWN0aW9uIGZyb20gJy4vZGIvZGF0YWJhc2Vjb25uZWN0aW9uJztcclxuXHJcbmNvbnN0IHRva2VuTGlzdCA9IHt9O1xyXG5cclxubGV0IGFwcCA9IGV4cHJlc3MoKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcblxyXG5sZXQgdXNlclJvdXRlID0gcmVxdWlyZSgnLi9yb3V0ZXMvdXNlcicpO1xyXG5hcHAudXNlKCcvYXBpL3VzZXInLCB1c2VyUm91dGUpO1xyXG5cclxubGV0IGJsb2dSb3V0ZSA9IHJlcXVpcmUoJy4vcm91dGVzL2Jsb2cnKTtcclxuYXBwLnVzZSgnL2FwaS9ibG9nJywgYmxvZ1JvdXRlKTtcclxuXHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKTtcclxuXHJcbi8vIE5vcm1hbCByZXF1ZXN0XHJcbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhgJHtuZXcgRGF0ZSgpLnRvU3RyaW5nKCl9ID0+ICR7cmVxLm9yaWdpbmFsVXJsfSAke3JlcS5ib2R5fWApO1xyXG4gICAgbmV4dCgpO1xyXG59KTtcclxuXHJcbi8vRXJyb3IgaGFuZGxpbmdcclxuXHJcbi8vNDAwIC0gTm90IGZvdW5kIGVycm9yXHJcbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICByZXMuc3RhdHVzKDQwNCkuc2VuZCgnRXJyb3IgLSB3ZSB0aGluayB5b3UgYXJlIGxvc3QuJyk7XHJcbiAgICBuZXh0KCk7XHJcbn0pO1xyXG5cclxuLy81MDAgLSBJbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcclxuYXBwLnVzZSgoZXJyLCByZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZXJyLnN0YWNrKTtcclxuICAgIHJlcy5zZW5kRmlsZShwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vcHVibGljLzUwMC5odG1sJykpO1xyXG4gICAgbmV4dCgpO1xyXG59KTtcclxuXHJcbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDE7XHJcbmFwcC5saXN0ZW4oUE9SVCwgKCkgPT4gY29uc29sZS5pbmZvKGBTZXJ2ZXIgaGFzIHN0YXJ0ZWQgb24gJHtQT1JUfWApKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "tokenList",
        "app",
        "use",
        "bodyParser",
        "json",
        "userRoute",
        "require",
        "blogRoute",
        "express",
        "static",
        "req",
        "res",
        "next",
        "console",
        "log",
        "Date",
        "toString",
        "originalUrl",
        "body",
        "status",
        "send",
        "err",
        "stack",
        "sendFile",
        "path",
        "join",
        "__dirname",
        "PORT",
        "process",
        "env",
        "listen",
        "info"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,SAAS,GAAG,EAAlB;AAEA,IAAIC,GAAG,GAAG,uBAAV;AACAA,GAAG,CAACC,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAvB;;AACAL,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBG,SAArB;;AAEA,IAAIE,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAvB;;AACAL,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBK,SAArB;AAEAN,GAAG,CAACC,GAAJ,CAAQM,iBAAQC,MAAR,CAAe,QAAf,CAAR,E,CAEA;;AACAR,GAAG,CAACC,GAAJ,CAAQ,UAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBC,EAAAA,OAAO,CAACC,GAAR,WAAe,IAAIC,IAAJ,GAAWC,QAAX,EAAf,iBAA2CN,GAAG,CAACO,WAA/C,cAA8DP,GAAG,CAACQ,IAAlE;AACAN,EAAAA,IAAI;AACP,CAHD,E,CAKA;AAEA;;AACAX,GAAG,CAACC,GAAJ,CAAQ,UAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gCAArB;AACAR,EAAAA,IAAI;AACP,CAHD,E,CAKA;;AACAX,GAAG,CAACC,GAAJ,CAAQ,UAACmB,GAAD,EAAMX,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,KAAhB;AACAX,EAAAA,GAAG,CAACY,QAAJ,CAAaC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,oBAArB,CAAb;AACAd,EAAAA,IAAI;AACP,CAJD;AAMA,IAAMe,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA1B,GAAG,CAAC6B,MAAJ,CAAWH,IAAX,EAAiB;AAAA,SAAMd,OAAO,CAACkB,IAAR,iCAAsCJ,IAAtC,EAAN;AAAA,CAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport path from 'path';\r\nimport bodyParser from 'body-parser';\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../config.json'\r\nimport dbConnection from './db/databaseconnection';\r\n\r\nconst tokenList = {};\r\n\r\nlet app = express();\r\napp.use(bodyParser.json());\r\n\r\nlet userRoute = require('./routes/user');\r\napp.use('/api/user', userRoute);\r\n\r\nlet blogRoute = require('./routes/blog');\r\napp.use('/api/blog', blogRoute);\r\n\r\napp.use(express.static('public'));\r\n\r\n// Normal request\r\napp.use((req, res, next) => {\r\n    console.log(`${new Date().toString()} => ${req.originalUrl} ${req.body}`);\r\n    next();\r\n});\r\n\r\n//Error handling\r\n\r\n//400 - Not found error\r\napp.use((req, res, next) => {\r\n    res.status(404).send('Error - we think you are lost.');\r\n    next();\r\n});\r\n\r\n//500 - Internal server error\r\napp.use((err, req, res, next) => {\r\n    console.log(err.stack);\r\n    res.sendFile(path.join(__dirname, '../public/500.html'));\r\n    next();\r\n});\r\n\r\nconst PORT = process.env.PORT || 3001;\r\napp.listen(PORT, () => console.info(`Server has started on ${PORT}`));"
      ]
    },
    "sourceType": "script",
    "mtime": 1550748692696
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\db\\\\databaseconnection.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-accessment",
      "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\db\\databaseconnection.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-accessment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-accessment\\src\\db\\databaseconnection.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\db\\databaseconnection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\db",
        "sourceFileName": "databaseconnection.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_mongoose.default.Promise = global.Promise;\n\n_mongoose.default.connect(\"mongodb://localhost:27017/node-training-accessment\", {\n  useNewUrlParser: true\n}).then(function () {\n  console.log('Connected to the database !!');\n}).catch(function (err) {\n  console.log('Connection failed', err);\n  process.exit();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlY29ubmVjdGlvbi5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsIlByb21pc2UiLCJnbG9iYWwiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidGhlbiIsImNvbnNvbGUiLCJsb2ciLCJjYXRjaCIsImVyciIsInByb2Nlc3MiLCJleGl0Il0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUFBLGtCQUFTQyxPQUFULEdBQW1CQyxNQUFNLENBQUNELE9BQTFCOztBQUNBRCxrQkFBU0csT0FBVCxDQUFpQixvREFBakIsRUFBdUU7QUFBRUMsRUFBQUEsZUFBZSxFQUFFO0FBQW5CLENBQXZFLEVBQ0tDLElBREwsQ0FDVSxZQUFNO0FBQ1JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDhCQUFaO0FBQ0gsQ0FITCxFQUlLQyxLQUpMLENBSVcsVUFBQ0MsR0FBRCxFQUFTO0FBQ1pILEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1CQUFaLEVBQWlDRSxHQUFqQztBQUNBQyxFQUFBQSxPQUFPLENBQUNDLElBQVI7QUFDSCxDQVBMIiwic291cmNlUm9vdCI6IkQ6XFxOb2RlSnNUcmFpbmluZ1xcbm9kZS10cmFpbmluZy1hY2Nlc3NtZW50XFxzcmNcXGRiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxuXHJcbm1vbmdvb3NlLlByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcclxubW9uZ29vc2UuY29ubmVjdChcIm1vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvbm9kZS10cmFpbmluZy1hY2Nlc3NtZW50XCIsIHsgdXNlTmV3VXJsUGFyc2VyOiB0cnVlIH0pXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byB0aGUgZGF0YWJhc2UgISEnKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW9uIGZhaWxlZCcsIGVycik7XHJcbiAgICAgICAgcHJvY2Vzcy5leGl0KCk7XHJcbiAgICB9KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "databaseconnection.js"
      ],
      "names": [
        "mongoose",
        "Promise",
        "global",
        "connect",
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "catch",
        "err",
        "process",
        "exit"
      ],
      "mappings": ";;AAAA;;;;AAEAA,kBAASC,OAAT,GAAmBC,MAAM,CAACD,OAA1B;;AACAD,kBAASG,OAAT,CAAiB,oDAAjB,EAAuE;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAvE,EACKC,IADL,CACU,YAAM;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,CAHL,EAIKC,KAJL,CAIW,UAACC,GAAD,EAAS;AACZH,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,GAAjC;AACAC,EAAAA,OAAO,CAACC,IAAR;AACH,CAPL",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\db",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\n\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect(\"mongodb://localhost:27017/node-training-accessment\", { useNewUrlParser: true })\r\n    .then(() => {\r\n        console.log('Connected to the database !!');\r\n    })\r\n    .catch((err) => {\r\n        console.log('Connection failed', err);\r\n        process.exit();\r\n    });"
      ]
    },
    "sourceType": "script",
    "mtime": 1550744733104
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\routes\\\\customer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-accessment",
      "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes\\customer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-accessment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes\\customer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes\\customer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes",
        "sourceFileName": "customer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _customer = _interopRequireDefault(require(\"../models/customer.model\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar jwt = require('jsonwebtoken');\n\nvar config = require('../../config.json');\n\nvar router = _express.default.Router(); // Get method with JWT verification\n\n\nrouter.get('/notsecure', function (req, res) {\n  res.send('Not secure - Ok');\n}); // Get method with JWT verification\n\nrouter.post('/secure', function (req, res) {\n  jwt.verify(req.headers['x-access-token'], config.secret, function (err, decoded) {\n    if (err) {\n      res.send('Err - secure - NOT Ok');\n    } else {\n      res.send('secure - Ok');\n    }\n  });\n}); // Get all customers Get API\n\nrouter.get('', function (req, res) {\n  _customer.default.find().then(function (doc) {\n    res.status(201).send(doc);\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // Add new customer POST API\n\nrouter.post('', function (req, res) {\n  if (Object.keys(req.body).length === 0) {\n    return res.status(400).send('Request body is missing');\n  }\n\n  var model = new _customer.default(req.body);\n  model.save().then(function (doc) {\n    if (!doc || doc.length === 0) {\n      return res.status(500).send(doc);\n    }\n\n    res.status(201).send(doc);\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // Get single customer Get API\n\nrouter.get('/ByEmail', function (req, res) {\n  _customer.default.findOne({\n    email: req.query.email\n  }).then(function (doc) {\n    res.status(201).send(doc);\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // Update customer PUT API\n\nrouter.put('', function (req, res) {\n  if (Object.keys(req.body).length === 0) {\n    res.status(400).send('Request body is missing');\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbWVyLmpzIl0sIm5hbWVzIjpbImp3dCIsInJlcXVpcmUiLCJjb25maWciLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsInBvc3QiLCJ2ZXJpZnkiLCJoZWFkZXJzIiwic2VjcmV0IiwiZXJyIiwiZGVjb2RlZCIsImN1c3RvbWVyTW9kZWwiLCJmaW5kIiwidGhlbiIsImRvYyIsInN0YXR1cyIsImNhdGNoIiwianNvbiIsIk9iamVjdCIsImtleXMiLCJib2R5IiwibGVuZ3RoIiwibW9kZWwiLCJzYXZlIiwiZmluZE9uZSIsImVtYWlsIiwicXVlcnkiLCJwdXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBQ0EsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsY0FBRCxDQUFuQjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUF0Qjs7QUFFQSxJQUFJRSxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWIsQyxDQUVBOzs7QUFDQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsWUFBWCxFQUF5QixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNuQ0EsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsaUJBQVQ7QUFDSCxDQUZELEUsQ0FLQTs7QUFDQU4sTUFBTSxDQUFDTyxJQUFQLENBQVksU0FBWixFQUF1QixVQUFDSCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQ1IsRUFBQUEsR0FBRyxDQUFDVyxNQUFKLENBQVdKLEdBQUcsQ0FBQ0ssT0FBSixDQUFZLGdCQUFaLENBQVgsRUFBMENWLE1BQU0sQ0FBQ1csTUFBakQsRUFBeUQsVUFBVUMsR0FBVixFQUFlQyxPQUFmLEVBQXdCO0FBQzdFLFFBQUlELEdBQUosRUFBUztBQUNMTixNQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyx1QkFBVDtBQUNILEtBRkQsTUFFTztBQUNIRCxNQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxhQUFUO0FBQ0g7QUFDSixHQU5EO0FBT0gsQ0FSRCxFLENBV0E7O0FBQ0FOLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEVBQVgsRUFBZSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN6QlEsb0JBQWNDLElBQWQsR0FDS0MsSUFETCxDQUNVLFVBQUFDLEdBQUcsRUFBSTtBQUNUWCxJQUFBQSxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCWCxJQUFoQixDQUFxQlUsR0FBckI7QUFDSCxHQUhMLEVBSUtFLEtBSkwsQ0FJVyxVQUFBUCxHQUFHLEVBQUk7QUFDVk4sSUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkUsSUFBaEIsQ0FBcUJSLEdBQXJCO0FBQ0gsR0FOTDtBQU9ILENBUkQsRSxDQVVBOztBQUNBWCxNQUFNLENBQUNPLElBQVAsQ0FBWSxFQUFaLEVBQWdCLFVBQUNILEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzFCLE1BQUllLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZakIsR0FBRyxDQUFDa0IsSUFBaEIsRUFBc0JDLE1BQXRCLEtBQWlDLENBQXJDLEVBQXdDO0FBQ3BDLFdBQU9sQixHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCWCxJQUFoQixDQUFxQix5QkFBckIsQ0FBUDtBQUNIOztBQUVELE1BQUlrQixLQUFLLEdBQUcsSUFBSVgsaUJBQUosQ0FBa0JULEdBQUcsQ0FBQ2tCLElBQXRCLENBQVo7QUFDQUUsRUFBQUEsS0FBSyxDQUFDQyxJQUFOLEdBQ0tWLElBREwsQ0FDVSxVQUFDQyxHQUFELEVBQVM7QUFDWCxRQUFJLENBQUNBLEdBQUQsSUFBUUEsR0FBRyxDQUFDTyxNQUFKLEtBQWUsQ0FBM0IsRUFBOEI7QUFDMUIsYUFBT2xCLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JYLElBQWhCLENBQXFCVSxHQUFyQixDQUFQO0FBQ0g7O0FBQ0RYLElBQUFBLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JYLElBQWhCLENBQXFCVSxHQUFyQjtBQUNILEdBTkwsRUFNT0UsS0FOUCxDQU1hLFVBQUNQLEdBQUQsRUFBUztBQUNkTixJQUFBQSxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCRSxJQUFoQixDQUFxQlIsR0FBckI7QUFDSCxHQVJMO0FBU0gsQ0FmRCxFLENBaUJBOztBQUNBWCxNQUFNLENBQUNHLEdBQVAsQ0FBVyxVQUFYLEVBQXVCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pDUSxvQkFBY2EsT0FBZCxDQUFzQjtBQUNkQyxJQUFBQSxLQUFLLEVBQUV2QixHQUFHLENBQUN3QixLQUFKLENBQVVEO0FBREgsR0FBdEIsRUFHS1osSUFITCxDQUdVLFVBQUFDLEdBQUcsRUFBSTtBQUNUWCxJQUFBQSxHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCWCxJQUFoQixDQUFxQlUsR0FBckI7QUFDSCxHQUxMLEVBTUtFLEtBTkwsQ0FNVyxVQUFBUCxHQUFHLEVBQUk7QUFDVk4sSUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkUsSUFBaEIsQ0FBcUJSLEdBQXJCO0FBQ0gsR0FSTDtBQVNILENBVkQsRSxDQVlBOztBQUNBWCxNQUFNLENBQUM2QixHQUFQLENBQVcsRUFBWCxFQUFlLFVBQUN6QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN6QixNQUFJZSxNQUFNLENBQUNDLElBQVAsQ0FBWWpCLEdBQUcsQ0FBQ2tCLElBQWhCLEVBQXNCQyxNQUF0QixLQUFpQyxDQUFyQyxFQUF3QztBQUNwQ2xCLElBQUFBLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JYLElBQWhCLENBQXFCLHlCQUFyQjtBQUNIO0FBRUosQ0FMRDtBQVNBd0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCL0IsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXE5vZGVKc1RyYWluaW5nXFxub2RlLXRyYWluaW5nLWFjY2Vzc21lbnRcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGN1c3RvbWVyTW9kZWwgZnJvbSAnLi4vbW9kZWxzL2N1c3RvbWVyLm1vZGVsJztcclxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmNvbnN0IGp3dCA9IHJlcXVpcmUoJ2pzb253ZWJ0b2tlbicpO1xyXG5jb25zdCBjb25maWcgPSByZXF1aXJlKCcuLi8uLi9jb25maWcuanNvbicpO1xyXG5cclxubGV0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG4vLyBHZXQgbWV0aG9kIHdpdGggSldUIHZlcmlmaWNhdGlvblxyXG5yb3V0ZXIuZ2V0KCcvbm90c2VjdXJlJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc2VuZCgnTm90IHNlY3VyZSAtIE9rJyk7XHJcbn0pO1xyXG5cclxuXHJcbi8vIEdldCBtZXRob2Qgd2l0aCBKV1QgdmVyaWZpY2F0aW9uXHJcbnJvdXRlci5wb3N0KCcvc2VjdXJlJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBqd3QudmVyaWZ5KHJlcS5oZWFkZXJzWyd4LWFjY2Vzcy10b2tlbiddLCBjb25maWcuc2VjcmV0LCBmdW5jdGlvbiAoZXJyLCBkZWNvZGVkKSB7XHJcbiAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICByZXMuc2VuZCgnRXJyIC0gc2VjdXJlIC0gTk9UIE9rJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmVzLnNlbmQoJ3NlY3VyZSAtIE9rJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxufSk7XHJcblxyXG5cclxuLy8gR2V0IGFsbCBjdXN0b21lcnMgR2V0IEFQSVxyXG5yb3V0ZXIuZ2V0KCcnLCAocmVxLCByZXMpID0+IHtcclxuICAgIGN1c3RvbWVyTW9kZWwuZmluZCgpXHJcbiAgICAgICAgLnRoZW4oZG9jID0+IHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDEpLnNlbmQoZG9jKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaChlcnIgPT4ge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbihlcnIpO1xyXG4gICAgICAgIH0pO1xyXG59KTtcclxuXHJcbi8vIEFkZCBuZXcgY3VzdG9tZXIgUE9TVCBBUElcclxucm91dGVyLnBvc3QoJycsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgaWYgKE9iamVjdC5rZXlzKHJlcS5ib2R5KS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoJ1JlcXVlc3QgYm9keSBpcyBtaXNzaW5nJyk7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IG1vZGVsID0gbmV3IGN1c3RvbWVyTW9kZWwocmVxLmJvZHkpO1xyXG4gICAgbW9kZWwuc2F2ZSgpXHJcbiAgICAgICAgLnRoZW4oKGRvYykgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIWRvYyB8fCBkb2MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZG9jKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMSkuc2VuZChkb2MpO1xyXG4gICAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oZXJyKTtcclxuICAgICAgICB9KTtcclxufSk7XHJcblxyXG4vLyBHZXQgc2luZ2xlIGN1c3RvbWVyIEdldCBBUElcclxucm91dGVyLmdldCgnL0J5RW1haWwnLCAocmVxLCByZXMpID0+IHtcclxuICAgIGN1c3RvbWVyTW9kZWwuZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGVtYWlsOiByZXEucXVlcnkuZW1haWxcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKGRvYyA9PiB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5zZW5kKGRvYyk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goZXJyID0+IHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oZXJyKTtcclxuICAgICAgICB9KTtcclxufSk7XHJcblxyXG4vLyBVcGRhdGUgY3VzdG9tZXIgUFVUIEFQSVxyXG5yb3V0ZXIucHV0KCcnLCAocmVxLCByZXMpID0+IHtcclxuICAgIGlmIChPYmplY3Qua2V5cyhyZXEuYm9keSkubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoJ1JlcXVlc3QgYm9keSBpcyBtaXNzaW5nJyk7XHJcbiAgICB9XHJcblxyXG59KTtcclxuXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "customer.js"
      ],
      "names": [
        "jwt",
        "require",
        "config",
        "router",
        "express",
        "Router",
        "get",
        "req",
        "res",
        "send",
        "post",
        "verify",
        "headers",
        "secret",
        "err",
        "decoded",
        "customerModel",
        "find",
        "then",
        "doc",
        "status",
        "catch",
        "json",
        "Object",
        "keys",
        "body",
        "length",
        "model",
        "save",
        "findOne",
        "email",
        "query",
        "put",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;;;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,mBAAD,CAAtB;;AAEA,IAAIE,MAAM,GAAGC,iBAAQC,MAAR,EAAb,C,CAEA;;;AACAF,MAAM,CAACG,GAAP,CAAW,YAAX,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCA,EAAAA,GAAG,CAACC,IAAJ,CAAS,iBAAT;AACH,CAFD,E,CAKA;;AACAN,MAAM,CAACO,IAAP,CAAY,SAAZ,EAAuB,UAACH,GAAD,EAAMC,GAAN,EAAc;AACjCR,EAAAA,GAAG,CAACW,MAAJ,CAAWJ,GAAG,CAACK,OAAJ,CAAY,gBAAZ,CAAX,EAA0CV,MAAM,CAACW,MAAjD,EAAyD,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AAC7E,QAAID,GAAJ,EAAS;AACLN,MAAAA,GAAG,CAACC,IAAJ,CAAS,uBAAT;AACH,KAFD,MAEO;AACHD,MAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACH;AACJ,GAND;AAOH,CARD,E,CAWA;;AACAN,MAAM,CAACG,GAAP,CAAW,EAAX,EAAe,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBQ,oBAAcC,IAAd,GACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACTX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqBU,GAArB;AACH,GAHL,EAIKE,KAJL,CAIW,UAAAP,GAAG,EAAI;AACVN,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBR,GAArB;AACH,GANL;AAOH,CARD,E,CAUA;;AACAX,MAAM,CAACO,IAAP,CAAY,EAAZ,EAAgB,UAACH,GAAD,EAAMC,GAAN,EAAc;AAC1B,MAAIe,MAAM,CAACC,IAAP,CAAYjB,GAAG,CAACkB,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,WAAOlB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB,yBAArB,CAAP;AACH;;AAED,MAAIkB,KAAK,GAAG,IAAIX,iBAAJ,CAAkBT,GAAG,CAACkB,IAAtB,CAAZ;AACAE,EAAAA,KAAK,CAACC,IAAN,GACKV,IADL,CACU,UAACC,GAAD,EAAS;AACX,QAAI,CAACA,GAAD,IAAQA,GAAG,CAACO,MAAJ,KAAe,CAA3B,EAA8B;AAC1B,aAAOlB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqBU,GAArB,CAAP;AACH;;AACDX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqBU,GAArB;AACH,GANL,EAMOE,KANP,CAMa,UAACP,GAAD,EAAS;AACdN,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBR,GAArB;AACH,GARL;AASH,CAfD,E,CAiBA;;AACAX,MAAM,CAACG,GAAP,CAAW,UAAX,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCQ,oBAAca,OAAd,CAAsB;AACdC,IAAAA,KAAK,EAAEvB,GAAG,CAACwB,KAAJ,CAAUD;AADH,GAAtB,EAGKZ,IAHL,CAGU,UAAAC,GAAG,EAAI;AACTX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqBU,GAArB;AACH,GALL,EAMKE,KANL,CAMW,UAAAP,GAAG,EAAI;AACVN,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBR,GAArB;AACH,GARL;AASH,CAVD,E,CAYA;;AACAX,MAAM,CAAC6B,GAAP,CAAW,EAAX,EAAe,UAACzB,GAAD,EAAMC,GAAN,EAAc;AACzB,MAAIe,MAAM,CAACC,IAAP,CAAYjB,GAAG,CAACkB,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpClB,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqB,yBAArB;AACH;AAEJ,CALD;AASAwB,MAAM,CAACC,OAAP,GAAiB/B,MAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes",
      "sourcesContent": [
        "import customerModel from '../models/customer.model';\r\nimport express from 'express';\r\nconst jwt = require('jsonwebtoken');\r\nconst config = require('../../config.json');\r\n\r\nlet router = express.Router();\r\n\r\n// Get method with JWT verification\r\nrouter.get('/notsecure', (req, res) => {\r\n    res.send('Not secure - Ok');\r\n});\r\n\r\n\r\n// Get method with JWT verification\r\nrouter.post('/secure', (req, res) => {\r\n    jwt.verify(req.headers['x-access-token'], config.secret, function (err, decoded) {\r\n        if (err) {\r\n            res.send('Err - secure - NOT Ok');\r\n        } else {\r\n            res.send('secure - Ok');\r\n        }\r\n    })\r\n});\r\n\r\n\r\n// Get all customers Get API\r\nrouter.get('', (req, res) => {\r\n    customerModel.find()\r\n        .then(doc => {\r\n            res.status(201).send(doc);\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Add new customer POST API\r\nrouter.post('', (req, res) => {\r\n    if (Object.keys(req.body).length === 0) {\r\n        return res.status(400).send('Request body is missing');\r\n    }\r\n\r\n    let model = new customerModel(req.body);\r\n    model.save()\r\n        .then((doc) => {\r\n            if (!doc || doc.length === 0) {\r\n                return res.status(500).send(doc);\r\n            }\r\n            res.status(201).send(doc);\r\n        }).catch((err) => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Get single customer Get API\r\nrouter.get('/ByEmail', (req, res) => {\r\n    customerModel.findOne({\r\n            email: req.query.email\r\n        })\r\n        .then(doc => {\r\n            res.status(201).send(doc);\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Update customer PUT API\r\nrouter.put('', (req, res) => {\r\n    if (Object.keys(req.body).length === 0) {\r\n        res.status(400).send('Request body is missing');\r\n    }\r\n\r\n});\r\n\r\n\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1550730249489
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\models\\\\customer.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-accessment",
      "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\models\\customer.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-accessment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-accessment\\src\\models\\customer.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\models\\customer.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\models",
        "sourceFileName": "customer.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar customerSchema = new _mongoose.default.Schema({\n  name: String,\n  email: {\n    type: String,\n    require: true,\n    unique: true\n  }\n});\nmodule.exports = _mongoose.default.model('customer', customerSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbWVyLm1vZGVsLmpzIl0sIm5hbWVzIjpbImN1c3RvbWVyU2NoZW1hIiwibW9uZ29vc2UiLCJTY2hlbWEiLCJuYW1lIiwiU3RyaW5nIiwiZW1haWwiLCJ0eXBlIiwicmVxdWlyZSIsInVuaXF1ZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBLElBQUlBLGNBQWMsR0FBRyxJQUFJQyxrQkFBU0MsTUFBYixDQUFvQjtBQUNyQ0MsRUFBQUEsSUFBSSxFQUFFQyxNQUQrQjtBQUVyQ0MsRUFBQUEsS0FBSyxFQUFFO0FBQ0hDLElBQUFBLElBQUksRUFBRUYsTUFESDtBQUVIRyxJQUFBQSxPQUFPLEVBQUUsSUFGTjtBQUdIQyxJQUFBQSxNQUFNLEVBQUU7QUFITDtBQUY4QixDQUFwQixDQUFyQjtBQVNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULGtCQUFTVSxLQUFULENBQWUsVUFBZixFQUEyQlgsY0FBM0IsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXE5vZGVKc1RyYWluaW5nXFxub2RlLXRyYWluaW5nLWFjY2Vzc21lbnRcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxubGV0IGN1c3RvbWVyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICBuYW1lOiBTdHJpbmcsXHJcbiAgICBlbWFpbDoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlOiB0cnVlLFxyXG4gICAgICAgIHVuaXF1ZTogdHJ1ZVxyXG4gICAgfVxyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoJ2N1c3RvbWVyJywgY3VzdG9tZXJTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "customer.model.js"
      ],
      "names": [
        "customerSchema",
        "mongoose",
        "Schema",
        "name",
        "String",
        "email",
        "type",
        "require",
        "unique",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAIA,cAAc,GAAG,IAAIC,kBAASC,MAAb,CAAoB;AACrCC,EAAAA,IAAI,EAAEC,MAD+B;AAErCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEF,MADH;AAEHG,IAAAA,OAAO,EAAE,IAFN;AAGHC,IAAAA,MAAM,EAAE;AAHL;AAF8B,CAApB,CAArB;AASAC,MAAM,CAACC,OAAP,GAAiBT,kBAASU,KAAT,CAAe,UAAf,EAA2BX,cAA3B,CAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\nlet customerSchema = new mongoose.Schema({\r\n    name: String,\r\n    email: {\r\n        type: String,\r\n        require: true,\r\n        unique: true\r\n    }\r\n});\r\n\r\nmodule.exports = mongoose.model('customer', customerSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1550569116966
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\routes\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-accessment",
      "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-accessment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes\\user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user.model\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../../config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express.default.Router(); // Login with user\n\n\nrouter.post('/login', function (req, res, next) {\n  console.log('post to login user');\n\n  if (Object.keys(req.body).length === 0) {\n    return res.status(400).json({\n      status: \"error\",\n      message: \"Request body is missing!\"\n    });\n  }\n\n  _user.default.findOne({\n    username: req.body.username\n  }, function (err, userDetails) {\n    if (err) {\n      next(err);\n    } else {\n      if (userDetails == null) {\n        res.status(500).json({\n          status: \"error\",\n          message: \"User not found\",\n          data: null\n        });\n      } else {\n        if (_bcrypt.default.compareSync(req.body.password, userDetails.password)) {\n          // generate JWT token\n          var user = {\n            \"username\": req.body.username,\n            \"password\": req.body.password\n          };\n\n          var token = _jsonwebtoken.default.sign(user, _config.default.secret, {\n            expiresIn: _config.default.tokenLife\n          });\n\n          var refreshToken = _jsonwebtoken.default.sign(user, _config.default.refreshTokenSecret, {\n            expiresIn: _config.default.refreshTokenLife\n          }); //tokenList[refreshToken] = response\n\n\n          var tokenDetails = {\n            \"status\": \"User login\",\n            \"token\": token,\n            \"refreshToken\": refreshToken\n          }; // return success\n\n          res.status(200).json({\n            status: \"success\",\n            message: \"Login successfully\",\n            data: {\n              user: userDetails,\n              token: tokenDetails\n            }\n          });\n        } else {\n          // login fail\n          res.status(500).json({\n            status: \"error\",\n            message: \"Invalid credentials\",\n            data: null\n          });\n        }\n      }\n    }\n  });\n}); // Create new user\n\nrouter.post('', function (req, res, next) {\n  console.log('post to create user');\n\n  if (Object.keys(req.body).length === 0) {\n    return res.status(400).send('Request body is missing');\n  }\n\n  var model = new _user.default({\n    name: req.body.name,\n    username: req.body.username,\n    password: req.body.password,\n    isactive: req.body.isactive\n  });\n  model.save().then(function (doc) {\n    if (!doc || doc.length === 0) {\n      return res.status(500).send(doc);\n    }\n\n    res.status(201).send(doc);\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // JWT secure validation\n\nrouter.use(require('../../tokenChecker')); // Get all user\n\nrouter.get('', function (req, res, next) {\n  console.log('call get all user');\n\n  _user.default.find().then(function (result) {\n    res.status(200).send(result);\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // Get user details\n\nrouter.get('/getuser', function (req, res, next) {\n  _user.default.findOne({\n    username: req.query.username\n  }).then(function (doc) {\n    if (doc == null) {\n      res.status(500).json({\n        status: \"error\",\n        message: \"User not found.\",\n        data: null\n      });\n    } else {\n      res.status(200).send(doc);\n    }\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // Update existing user\n\nrouter.put('', function (req, res, next) {\n  console.log('put to update existing user');\n\n  if (Object.keys(req.body).length === 0) {\n    return res.status(400).send('Request body is missing');\n  }\n\n  _user.default.findOneAndUpdate({\n    username: req.query.username\n  }, req.body, {\n    new: true\n  }).then(function (result) {\n    if (result == null) {\n      res.status(500).json({\n        status: \"error\",\n        message: \"User not found.\",\n        data: null\n      });\n    } else {\n      res.status(200).json({\n        status: \"success\",\n        message: \"Record updated successfully.\",\n        data: result\n      });\n    }\n  }).catch(function (err) {\n    res.status(500).send(err);\n  });\n}); // Delete a user - delete api\n\nrouter.delete('', function (req, res) {\n  _user.default.findOneAndRemove({\n    username: req.query.username\n  }).then(function (doc) {\n    if (doc == null) {\n      res.status(500).json({\n        status: \"error\",\n        message: \"User not found.\",\n        data: null\n      });\n    } else {\n      res.status(200).json({\n        status: \"success\",\n        message: \"Record deleted successfully.\",\n        data: doc\n      });\n    }\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "req",
        "res",
        "next",
        "console",
        "log",
        "Object",
        "keys",
        "body",
        "length",
        "status",
        "json",
        "message",
        "userModel",
        "findOne",
        "username",
        "err",
        "userDetails",
        "data",
        "bcrypt",
        "compareSync",
        "password",
        "user",
        "token",
        "jwt",
        "sign",
        "config",
        "secret",
        "expiresIn",
        "tokenLife",
        "refreshToken",
        "refreshTokenSecret",
        "refreshTokenLife",
        "tokenDetails",
        "send",
        "model",
        "name",
        "isactive",
        "save",
        "then",
        "doc",
        "catch",
        "use",
        "require",
        "get",
        "find",
        "result",
        "query",
        "put",
        "findOneAndUpdate",
        "new",
        "delete",
        "findOneAndRemove",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf,C,CAEA;;;AACAF,MAAM,CAACG,IAAP,CAAY,QAAZ,EAAsB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYN,GAAG,CAACO,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,WAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,MAAAA,MAAM,EAAE,OADgB;AAExBE,MAAAA,OAAO,EAAE;AAFe,KAArB,CAAP;AAIH;;AAEDC,gBAAUC,OAAV,CAAkB;AACdC,IAAAA,QAAQ,EAAEd,GAAG,CAACO,IAAJ,CAASO;AADL,GAAlB,EAEG,UAAUC,GAAV,EAAeC,WAAf,EAA4B;AAC3B,QAAID,GAAJ,EAAS;AACLb,MAAAA,IAAI,CAACa,GAAD,CAAJ;AACH,KAFD,MAEO;AACH,UAAIC,WAAW,IAAI,IAAnB,EAAyB;AACrBf,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,UAAAA,MAAM,EAAE,OADS;AAEjBE,UAAAA,OAAO,EAAE,gBAFQ;AAGjBM,UAAAA,IAAI,EAAE;AAHW,SAArB;AAKH,OAND,MAMO;AACH,YAAIC,gBAAOC,WAAP,CAAmBnB,GAAG,CAACO,IAAJ,CAASa,QAA5B,EAAsCJ,WAAW,CAACI,QAAlD,CAAJ,EAAiE;AAE7D;AACA,cAAMC,IAAI,GAAG;AACT,wBAAYrB,GAAG,CAACO,IAAJ,CAASO,QADZ;AAET,wBAAYd,GAAG,CAACO,IAAJ,CAASa;AAFZ,WAAb;;AAIA,cAAME,KAAK,GAAGC,sBAAIC,IAAJ,CAASH,IAAT,EAAeI,gBAAOC,MAAtB,EAA8B;AACxCC,YAAAA,SAAS,EAAEF,gBAAOG;AADsB,WAA9B,CAAd;;AAGA,cAAMC,YAAY,GAAGN,sBAAIC,IAAJ,CAASH,IAAT,EAAeI,gBAAOK,kBAAtB,EAA0C;AAC3DH,YAAAA,SAAS,EAAEF,gBAAOM;AADyC,WAA1C,CAArB,CAV6D,CAa7D;;;AACA,cAAMC,YAAY,GAAG;AACjB,sBAAU,YADO;AAEjB,qBAASV,KAFQ;AAGjB,4BAAgBO;AAHC,WAArB,CAd6D,CAmB7D;;AACA5B,UAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,YAAAA,MAAM,EAAE,SADS;AAEjBE,YAAAA,OAAO,EAAE,oBAFQ;AAGjBM,YAAAA,IAAI,EAAE;AACFI,cAAAA,IAAI,EAAEL,WADJ;AAEFM,cAAAA,KAAK,EAAEU;AAFL;AAHW,WAArB;AAQH,SA5BD,MA4BO;AACH;AACA/B,UAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,YAAAA,MAAM,EAAE,OADS;AAEjBE,YAAAA,OAAO,EAAE,qBAFQ;AAGjBM,YAAAA,IAAI,EAAE;AAHW,WAArB;AAKH;AACJ;AACJ;AACJ,GAnDD;AAoDH,CA7DD,E,CA+DA;;AACArB,MAAM,CAACG,IAAP,CAAY,EAAZ,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYN,GAAG,CAACO,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,WAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqB,yBAArB,CAAP;AACH;;AAED,MAAIC,KAAK,GAAG,IAAItB,aAAJ,CAAc;AACtBuB,IAAAA,IAAI,EAAEnC,GAAG,CAACO,IAAJ,CAAS4B,IADO;AAEtBrB,IAAAA,QAAQ,EAAEd,GAAG,CAACO,IAAJ,CAASO,QAFG;AAGtBM,IAAAA,QAAQ,EAAEpB,GAAG,CAACO,IAAJ,CAASa,QAHG;AAItBgB,IAAAA,QAAQ,EAAEpC,GAAG,CAACO,IAAJ,CAAS6B;AAJG,GAAd,CAAZ;AAMAF,EAAAA,KAAK,CAACG,IAAN,GACKC,IADL,CACU,UAACC,GAAD,EAAS;AACX,QAAI,CAACA,GAAD,IAAQA,GAAG,CAAC/B,MAAJ,KAAe,CAA3B,EAA8B;AAC1B,aAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqBM,GAArB,CAAP;AACH;;AACDtC,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqBM,GAArB;AACH,GANL,EAMOC,KANP,CAMa,UAACzB,GAAD,EAAS;AACdd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,GAArB;AACH,GARL;AASH,CArBD,E,CAuBA;;AACAnB,MAAM,CAAC6C,GAAP,CAAWC,OAAO,CAAC,oBAAD,CAAlB,E,CAEA;;AACA9C,MAAM,CAAC+C,GAAP,CAAW,EAAX,EAAe,UAAU3C,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACAQ,gBAAUgC,IAAV,GACKN,IADL,CACU,UAAAO,MAAM,EAAI;AACZ5C,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqBY,MAArB;AACH,GAHL,EAIKL,KAJL,CAIW,UAAAzB,GAAG,EAAI;AACVd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,GAArB;AACH,GANL;AAOH,CATD,E,CAWA;;AACAnB,MAAM,CAAC+C,GAAP,CAAW,UAAX,EAAuB,UAAU3C,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7CU,gBAAUC,OAAV,CAAkB;AACVC,IAAAA,QAAQ,EAAEd,GAAG,CAAC8C,KAAJ,CAAUhC;AADV,GAAlB,EAGKwB,IAHL,CAGU,UAAAC,GAAG,EAAI;AACT,QAAIA,GAAG,IAAI,IAAX,EAAiB;AACbtC,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,QAAAA,MAAM,EAAE,OADS;AAEjBE,QAAAA,OAAO,EAAE,iBAFQ;AAGjBM,QAAAA,IAAI,EAAE;AAHW,OAArB;AAKH,KAND,MAMO;AACHhB,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqBM,GAArB;AACH;AACJ,GAbL,EAcKC,KAdL,CAcW,UAAAzB,GAAG,EAAI;AACVd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,GAArB;AACH,GAhBL;AAiBH,CAlBD,E,CAoBA;;AACAnB,MAAM,CAACmD,GAAP,CAAW,EAAX,EAAe,UAAU/C,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYN,GAAG,CAACO,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,WAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqB,yBAArB,CAAP;AACH;;AAEDrB,gBAAUoC,gBAAV,CAA2B;AACnBlC,IAAAA,QAAQ,EAAEd,GAAG,CAAC8C,KAAJ,CAAUhC;AADD,GAA3B,EAEOd,GAAG,CAACO,IAFX,EAEiB;AACT0C,IAAAA,GAAG,EAAE;AADI,GAFjB,EAKKX,IALL,CAKU,UAAAO,MAAM,EAAI;AACZ,QAAIA,MAAM,IAAI,IAAd,EAAoB;AAChB5C,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,QAAAA,MAAM,EAAE,OADS;AAEjBE,QAAAA,OAAO,EAAE,iBAFQ;AAGjBM,QAAAA,IAAI,EAAE;AAHW,OAArB;AAKH,KAND,MAMO;AACHhB,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,QAAAA,MAAM,EAAE,SADS;AAEjBE,QAAAA,OAAO,EAAE,8BAFQ;AAGjBM,QAAAA,IAAI,EAAE4B;AAHW,OAArB;AAKH;AACJ,GAnBL,EAoBKL,KApBL,CAoBW,UAAAzB,GAAG,EAAI;AACVd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBwB,IAAhB,CAAqBlB,GAArB;AACH,GAtBL;AAuBH,CA7BD,E,CA+BA;;AACAnB,MAAM,CAACsD,MAAP,CAAc,EAAd,EAAkB,UAAClD,GAAD,EAAMC,GAAN,EAAc;AAC5BW,gBAAUuC,gBAAV,CAA2B;AACnBrC,IAAAA,QAAQ,EAAEd,GAAG,CAAC8C,KAAJ,CAAUhC;AADD,GAA3B,EAGKwB,IAHL,CAGU,UAAAC,GAAG,EAAI;AACT,QAAIA,GAAG,IAAI,IAAX,EAAiB;AACbtC,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,QAAAA,MAAM,EAAE,OADS;AAEjBE,QAAAA,OAAO,EAAE,iBAFQ;AAGjBM,QAAAA,IAAI,EAAE;AAHW,OAArB;AAKH,KAND,MAMO;AACHhB,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,QAAAA,MAAM,EAAE,SADS;AAEjBE,QAAAA,OAAO,EAAE,8BAFQ;AAGjBM,QAAAA,IAAI,EAAEsB;AAHW,OAArB;AAKH;AACJ,GAjBL,EAkBKC,KAlBL,CAkBW,UAAAzB,GAAG,EAAI;AACVd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,GAArB;AACH,GApBL;AAqBH,CAtBD;AAwBAqC,MAAM,CAACC,OAAP,GAAiBzD,MAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\r\nimport userModel from '../models/user.model';\r\nimport bcrypt from 'bcrypt'\r\nimport jwt from 'jsonwebtoken';\r\nimport config from '../../config.json';\r\n\r\nconst router = express.Router();\r\n\r\n// Login with user\r\nrouter.post('/login', function (req, res, next) {\r\n    console.log('post to login user');\r\n    if (Object.keys(req.body).length === 0) {\r\n        return res.status(400).json({\r\n            status: \"error\",\r\n            message: \"Request body is missing!\"\r\n        });\r\n    }\r\n\r\n    userModel.findOne({\r\n        username: req.body.username\r\n    }, function (err, userDetails) {\r\n        if (err) {\r\n            next(err);\r\n        } else {\r\n            if (userDetails == null) {\r\n                res.status(500).json({\r\n                    status: \"error\",\r\n                    message: \"User not found\",\r\n                    data: null\r\n                });\r\n            } else {\r\n                if (bcrypt.compareSync(req.body.password, userDetails.password)) {\r\n\r\n                    // generate JWT token\r\n                    const user = {\r\n                        \"username\": req.body.username,\r\n                        \"password\": req.body.password\r\n                    };\r\n                    const token = jwt.sign(user, config.secret, {\r\n                        expiresIn: config.tokenLife\r\n                    });\r\n                    const refreshToken = jwt.sign(user, config.refreshTokenSecret, {\r\n                        expiresIn: config.refreshTokenLife\r\n                    });\r\n                    //tokenList[refreshToken] = response\r\n                    const tokenDetails = {\r\n                        \"status\": \"User login\",\r\n                        \"token\": token,\r\n                        \"refreshToken\": refreshToken\r\n                    };\r\n                    // return success\r\n                    res.status(200).json({\r\n                        status: \"success\",\r\n                        message: \"Login successfully\",\r\n                        data: {\r\n                            user: userDetails,\r\n                            token: tokenDetails\r\n                        }\r\n                    });\r\n                } else {\r\n                    // login fail\r\n                    res.status(500).json({\r\n                        status: \"error\",\r\n                        message: \"Invalid credentials\",\r\n                        data: null\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n// Create new user\r\nrouter.post('', function (req, res, next) {\r\n    console.log('post to create user');\r\n    if (Object.keys(req.body).length === 0) {\r\n        return res.status(400).send('Request body is missing');\r\n    }\r\n\r\n    let model = new userModel({\r\n        name: req.body.name,\r\n        username: req.body.username,\r\n        password: req.body.password,\r\n        isactive: req.body.isactive\r\n    });\r\n    model.save()\r\n        .then((doc) => {\r\n            if (!doc || doc.length === 0) {\r\n                return res.status(500).send(doc);\r\n            }\r\n            res.status(201).send(doc);\r\n        }).catch((err) => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// JWT secure validation\r\nrouter.use(require('../../tokenChecker'))\r\n\r\n// Get all user\r\nrouter.get('', function (req, res, next) {\r\n    console.log('call get all user');\r\n    userModel.find()\r\n        .then(result => {\r\n            res.status(200).send(result);\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Get user details\r\nrouter.get('/getuser', function (req, res, next) {\r\n    userModel.findOne({\r\n            username: req.query.username\r\n        })\r\n        .then(doc => {\r\n            if (doc == null) {\r\n                res.status(500).json({\r\n                    status: \"error\",\r\n                    message: \"User not found.\",\r\n                    data: null\r\n                })\r\n            } else {\r\n                res.status(200).send(doc);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Update existing user\r\nrouter.put('', function (req, res, next) {\r\n    console.log('put to update existing user');\r\n    if (Object.keys(req.body).length === 0) {\r\n        return res.status(400).send('Request body is missing');\r\n    }\r\n\r\n    userModel.findOneAndUpdate({\r\n            username: req.query.username\r\n        }, req.body, {\r\n            new: true\r\n        })\r\n        .then(result => {\r\n            if (result == null) {\r\n                res.status(500).json({\r\n                    status: \"error\",\r\n                    message: \"User not found.\",\r\n                    data: null\r\n                })\r\n            } else {\r\n                res.status(200).json({\r\n                    status: \"success\",\r\n                    message: \"Record updated successfully.\",\r\n                    data: result\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            res.status(500).send(err);\r\n        });\r\n});\r\n\r\n// Delete a user - delete api\r\nrouter.delete('', (req, res) => {\r\n    userModel.findOneAndRemove({\r\n            username: req.query.username\r\n        })\r\n        .then(doc => {\r\n            if (doc == null) {\r\n                res.status(500).json({\r\n                    status: \"error\",\r\n                    message: \"User not found.\",\r\n                    data: null\r\n                })\r\n            } else {\r\n                res.status(200).json({\r\n                    status: \"success\",\r\n                    message: \"Record deleted successfully.\",\r\n                    data: doc\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1550750467110
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\models\\\\user.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-accessment",
      "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\models\\user.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-accessment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-accessment\\src\\models\\user.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\models\\user.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\models",
        "sourceFileName": "user.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar saltRound = 10;\nvar userSchema = new _mongoose.default.Schema({\n  name: String,\n  username: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  isactive: Boolean,\n  createddate: Date,\n  updateddate: Date\n});\nuserSchema.pre('save', function (next) {\n  console.log('userSchema pre calling');\n  var currentDate = new Date();\n  this.updateddate = currentDate;\n\n  if (this.createddate == undefined) {\n    this.createddate = currentDate;\n  }\n\n  this.password = _bcrypt.default.hashSync(this.password, saltRound);\n  next();\n});\nmodule.exports = _mongoose.default.model('user', userSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kZWwuanMiXSwibmFtZXMiOlsic2FsdFJvdW5kIiwidXNlclNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwibmFtZSIsIlN0cmluZyIsInVzZXJuYW1lIiwidHlwZSIsInJlcXVpcmVkIiwidW5pcXVlIiwicGFzc3dvcmQiLCJ0cmltIiwiaXNhY3RpdmUiLCJCb29sZWFuIiwiY3JlYXRlZGRhdGUiLCJEYXRlIiwidXBkYXRlZGRhdGUiLCJwcmUiLCJuZXh0IiwiY29uc29sZSIsImxvZyIsImN1cnJlbnREYXRlIiwidW5kZWZpbmVkIiwiYmNyeXB0IiwiaGFzaFN5bmMiLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFDQSxJQUFNQSxTQUFTLEdBQUcsRUFBbEI7QUFFQSxJQUFJQyxVQUFVLEdBQUcsSUFBSUMsa0JBQVNDLE1BQWIsQ0FBb0I7QUFDakNDLEVBQUFBLElBQUksRUFBRUMsTUFEMkI7QUFFakNDLEVBQUFBLFFBQVEsRUFBRTtBQUNOQyxJQUFBQSxJQUFJLEVBQUVGLE1BREE7QUFFTkcsSUFBQUEsUUFBUSxFQUFFLElBRko7QUFHTkMsSUFBQUEsTUFBTSxFQUFFO0FBSEYsR0FGdUI7QUFPakNDLEVBQUFBLFFBQVEsRUFBRTtBQUNOSCxJQUFBQSxJQUFJLEVBQUVGLE1BREE7QUFFTkcsSUFBQUEsUUFBUSxFQUFFLElBRko7QUFHTkcsSUFBQUEsSUFBSSxFQUFFO0FBSEEsR0FQdUI7QUFZakNDLEVBQUFBLFFBQVEsRUFBRUMsT0FadUI7QUFhakNDLEVBQUFBLFdBQVcsRUFBRUMsSUFib0I7QUFjakNDLEVBQUFBLFdBQVcsRUFBRUQ7QUFkb0IsQ0FBcEIsQ0FBakI7QUFpQkFkLFVBQVUsQ0FBQ2dCLEdBQVgsQ0FBZSxNQUFmLEVBQXVCLFVBQVVDLElBQVYsRUFBZ0I7QUFDbkNDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaO0FBQ0EsTUFBSUMsV0FBVyxHQUFHLElBQUlOLElBQUosRUFBbEI7QUFDQSxPQUFLQyxXQUFMLEdBQW1CSyxXQUFuQjs7QUFDQSxNQUFJLEtBQUtQLFdBQUwsSUFBb0JRLFNBQXhCLEVBQW1DO0FBQy9CLFNBQUtSLFdBQUwsR0FBbUJPLFdBQW5CO0FBQ0g7O0FBQ0QsT0FBS1gsUUFBTCxHQUFnQmEsZ0JBQU9DLFFBQVAsQ0FBZ0IsS0FBS2QsUUFBckIsRUFBK0JWLFNBQS9CLENBQWhCO0FBQ0FrQixFQUFBQSxJQUFJO0FBQ1AsQ0FURDtBQVdBTyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ4QixrQkFBU3lCLEtBQVQsQ0FBZSxNQUFmLEVBQXVCMUIsVUFBdkIsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXE5vZGVKc1RyYWluaW5nXFxub2RlLXRyYWluaW5nLWFjY2Vzc21lbnRcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxuaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHQnO1xyXG5jb25zdCBzYWx0Um91bmQgPSAxMDtcclxuXHJcbmxldCB1c2VyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICBuYW1lOiBTdHJpbmcsXHJcbiAgICB1c2VybmFtZToge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICB1bmlxdWU6IHRydWVcclxuICAgIH0sXHJcbiAgICBwYXNzd29yZDoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICB0cmltOiB0cnVlXHJcbiAgICB9LFxyXG4gICAgaXNhY3RpdmU6IEJvb2xlYW4sXHJcbiAgICBjcmVhdGVkZGF0ZTogRGF0ZSxcclxuICAgIHVwZGF0ZWRkYXRlOiBEYXRlXHJcbn0pO1xyXG5cclxudXNlclNjaGVtYS5wcmUoJ3NhdmUnLCBmdW5jdGlvbiAobmV4dCkge1xyXG4gICAgY29uc29sZS5sb2coJ3VzZXJTY2hlbWEgcHJlIGNhbGxpbmcnKTtcclxuICAgIHZhciBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKCk7XHJcbiAgICB0aGlzLnVwZGF0ZWRkYXRlID0gY3VycmVudERhdGU7XHJcbiAgICBpZiAodGhpcy5jcmVhdGVkZGF0ZSA9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICB0aGlzLmNyZWF0ZWRkYXRlID0gY3VycmVudERhdGU7XHJcbiAgICB9XHJcbiAgICB0aGlzLnBhc3N3b3JkID0gYmNyeXB0Lmhhc2hTeW5jKHRoaXMucGFzc3dvcmQsIHNhbHRSb3VuZCk7XHJcbiAgICBuZXh0KCk7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBtb25nb29zZS5tb2RlbCgndXNlcicsIHVzZXJTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.model.js"
      ],
      "names": [
        "saltRound",
        "userSchema",
        "mongoose",
        "Schema",
        "name",
        "String",
        "username",
        "type",
        "required",
        "unique",
        "password",
        "trim",
        "isactive",
        "Boolean",
        "createddate",
        "Date",
        "updateddate",
        "pre",
        "next",
        "console",
        "log",
        "currentDate",
        "undefined",
        "bcrypt",
        "hashSync",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA;;AACA;;;;AACA,IAAMA,SAAS,GAAG,EAAlB;AAEA,IAAIC,UAAU,GAAG,IAAIC,kBAASC,MAAb,CAAoB;AACjCC,EAAAA,IAAI,EAAEC,MAD2B;AAEjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAEF,MADA;AAENG,IAAAA,QAAQ,EAAE,IAFJ;AAGNC,IAAAA,MAAM,EAAE;AAHF,GAFuB;AAOjCC,EAAAA,QAAQ,EAAE;AACNH,IAAAA,IAAI,EAAEF,MADA;AAENG,IAAAA,QAAQ,EAAE,IAFJ;AAGNG,IAAAA,IAAI,EAAE;AAHA,GAPuB;AAYjCC,EAAAA,QAAQ,EAAEC,OAZuB;AAajCC,EAAAA,WAAW,EAAEC,IAboB;AAcjCC,EAAAA,WAAW,EAAED;AAdoB,CAApB,CAAjB;AAiBAd,UAAU,CAACgB,GAAX,CAAe,MAAf,EAAuB,UAAUC,IAAV,EAAgB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,MAAIC,WAAW,GAAG,IAAIN,IAAJ,EAAlB;AACA,OAAKC,WAAL,GAAmBK,WAAnB;;AACA,MAAI,KAAKP,WAAL,IAAoBQ,SAAxB,EAAmC;AAC/B,SAAKR,WAAL,GAAmBO,WAAnB;AACH;;AACD,OAAKX,QAAL,GAAgBa,gBAAOC,QAAP,CAAgB,KAAKd,QAArB,EAA+BV,SAA/B,CAAhB;AACAkB,EAAAA,IAAI;AACP,CATD;AAWAO,MAAM,CAACC,OAAP,GAAiBxB,kBAASyB,KAAT,CAAe,MAAf,EAAuB1B,UAAvB,CAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\nimport bcrypt from 'bcrypt';\r\nconst saltRound = 10;\r\n\r\nlet userSchema = new mongoose.Schema({\r\n    name: String,\r\n    username: {\r\n        type: String,\r\n        required: true,\r\n        unique: true\r\n    },\r\n    password: {\r\n        type: String,\r\n        required: true,\r\n        trim: true\r\n    },\r\n    isactive: Boolean,\r\n    createddate: Date,\r\n    updateddate: Date\r\n});\r\n\r\nuserSchema.pre('save', function (next) {\r\n    console.log('userSchema pre calling');\r\n    var currentDate = new Date();\r\n    this.updateddate = currentDate;\r\n    if (this.createddate == undefined) {\r\n        this.createddate = currentDate;\r\n    }\r\n    this.password = bcrypt.hashSync(this.password, saltRound);\r\n    next();\r\n});\r\n\r\nmodule.exports = mongoose.model('user', userSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1550744419375
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\tokenChecker.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-accessment",
      "filename": "D:\\NodeJsTraining\\node-training-accessment\\tokenChecker.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-accessment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-accessment\\tokenChecker.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-accessment\\tokenChecker.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment",
        "sourceFileName": "tokenChecker.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"./config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = function (req, res, next) {\n  var token = req.body.token || req.query.token || req.headers['x-access-token']; // decode token\n\n  if (token) {\n    // verifies secret and checks exp\n    _jsonwebtoken.default.verify(token, _config.default.secret, function (err, decoded) {\n      if (err) {\n        return res.status(401).json({\n          \"error\": true,\n          \"message\": 'Unauthorized access.'\n        });\n      }\n\n      req.decoded = decoded;\n      next();\n    });\n  } else {\n    // if there is no token\n    // return an error\n    return res.status(403).send({\n      \"error\": true,\n      \"message\": 'No token provided.'\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRva2VuQ2hlY2tlci5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiYm9keSIsInF1ZXJ5IiwiaGVhZGVycyIsImp3dCIsInZlcmlmeSIsImNvbmZpZyIsInNlY3JldCIsImVyciIsImRlY29kZWQiLCJzdGF0dXMiLCJqc29uIiwic2VuZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDakMsTUFBTUMsS0FBSyxHQUFHSCxHQUFHLENBQUNJLElBQUosQ0FBU0QsS0FBVCxJQUFrQkgsR0FBRyxDQUFDSyxLQUFKLENBQVVGLEtBQTVCLElBQXFDSCxHQUFHLENBQUNNLE9BQUosQ0FBWSxnQkFBWixDQUFuRCxDQURpQyxDQUVqQzs7QUFDQSxNQUFJSCxLQUFKLEVBQVc7QUFDUDtBQUNBSSwwQkFBSUMsTUFBSixDQUFXTCxLQUFYLEVBQWtCTSxnQkFBT0MsTUFBekIsRUFBaUMsVUFBVUMsR0FBVixFQUFlQyxPQUFmLEVBQXdCO0FBQ3JELFVBQUlELEdBQUosRUFBUztBQUNMLGVBQU9WLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCLG1CQUFTLElBRGU7QUFFeEIscUJBQVc7QUFGYSxTQUFyQixDQUFQO0FBSUg7O0FBQ0RkLE1BQUFBLEdBQUcsQ0FBQ1ksT0FBSixHQUFjQSxPQUFkO0FBQ0FWLE1BQUFBLElBQUk7QUFDUCxLQVREO0FBVUgsR0FaRCxNQVlPO0FBQ0g7QUFDQTtBQUNBLFdBQU9ELEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JFLElBQWhCLENBQXFCO0FBQ3hCLGVBQVMsSUFEZTtBQUV4QixpQkFBVztBQUZhLEtBQXJCLENBQVA7QUFJSDtBQUNKLENBdkJEIiwic291cmNlUm9vdCI6IkQ6XFxOb2RlSnNUcmFpbmluZ1xcbm9kZS10cmFpbmluZy1hY2Nlc3NtZW50Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gJy4vY29uZmlnLmpzb24nO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSAocmVxLCByZXMsIG5leHQpID0+IHtcclxuICAgIGNvbnN0IHRva2VuID0gcmVxLmJvZHkudG9rZW4gfHwgcmVxLnF1ZXJ5LnRva2VuIHx8IHJlcS5oZWFkZXJzWyd4LWFjY2Vzcy10b2tlbiddXHJcbiAgICAvLyBkZWNvZGUgdG9rZW5cclxuICAgIGlmICh0b2tlbikge1xyXG4gICAgICAgIC8vIHZlcmlmaWVzIHNlY3JldCBhbmQgY2hlY2tzIGV4cFxyXG4gICAgICAgIGp3dC52ZXJpZnkodG9rZW4sIGNvbmZpZy5zZWNyZXQsIGZ1bmN0aW9uIChlcnIsIGRlY29kZWQpIHtcclxuICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICBcImVycm9yXCI6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJtZXNzYWdlXCI6ICdVbmF1dGhvcml6ZWQgYWNjZXNzLidcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJlcS5kZWNvZGVkID0gZGVjb2RlZDtcclxuICAgICAgICAgICAgbmV4dCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBpZiB0aGVyZSBpcyBubyB0b2tlblxyXG4gICAgICAgIC8vIHJldHVybiBhbiBlcnJvclxyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMykuc2VuZCh7XHJcbiAgICAgICAgICAgIFwiZXJyb3JcIjogdHJ1ZSxcclxuICAgICAgICAgICAgXCJtZXNzYWdlXCI6ICdObyB0b2tlbiBwcm92aWRlZC4nXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "tokenChecker.js"
      ],
      "names": [
        "module",
        "exports",
        "req",
        "res",
        "next",
        "token",
        "body",
        "query",
        "headers",
        "jwt",
        "verify",
        "config",
        "secret",
        "err",
        "decoded",
        "status",
        "json",
        "send"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,MAAMC,KAAK,GAAGH,GAAG,CAACI,IAAJ,CAASD,KAAT,IAAkBH,GAAG,CAACK,KAAJ,CAAUF,KAA5B,IAAqCH,GAAG,CAACM,OAAJ,CAAY,gBAAZ,CAAnD,CADiC,CAEjC;;AACA,MAAIH,KAAJ,EAAW;AACP;AACAI,0BAAIC,MAAJ,CAAWL,KAAX,EAAkBM,gBAAOC,MAAzB,EAAiC,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AACrD,UAAID,GAAJ,EAAS;AACL,eAAOV,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxB,mBAAS,IADe;AAExB,qBAAW;AAFa,SAArB,CAAP;AAIH;;AACDd,MAAAA,GAAG,CAACY,OAAJ,GAAcA,OAAd;AACAV,MAAAA,IAAI;AACP,KATD;AAUH,GAZD,MAYO;AACH;AACA;AACA,WAAOD,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqB;AACxB,eAAS,IADe;AAExB,iBAAW;AAFa,KAArB,CAAP;AAIH;AACJ,CAvBD",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\r\nimport config from './config.json';\r\n\r\nmodule.exports = (req, res, next) => {\r\n    const token = req.body.token || req.query.token || req.headers['x-access-token']\r\n    // decode token\r\n    if (token) {\r\n        // verifies secret and checks exp\r\n        jwt.verify(token, config.secret, function (err, decoded) {\r\n            if (err) {\r\n                return res.status(401).json({\r\n                    \"error\": true,\r\n                    \"message\": 'Unauthorized access.'\r\n                });\r\n            }\r\n            req.decoded = decoded;\r\n            next();\r\n        });\r\n    } else {\r\n        // if there is no token\r\n        // return an error\r\n        return res.status(403).send({\r\n            \"error\": true,\r\n            \"message\": 'No token provided.'\r\n        });\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1550741303145
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\routes\\\\blog.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-accessment",
      "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes\\blog.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-accessment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes\\blog.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes\\blog.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes",
        "sourceFileName": "blog.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _blog = _interopRequireDefault(require(\"../models/blog.model\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user.model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = _express.default.Router(); // // JWT secure validation\n// router.use(require('../../tokenChecker'))\n// Create new blog\n\n\nrouter.post('', function (req, res, next) {\n  console.log('post to create blog');\n\n  if (Object.keys(req.body).length === 0) {\n    return res.status(400).send('Request body is missing');\n  }\n\n  _user.default.findOne({\n    _id: req.body.userid\n  }, function (err, userDetail) {\n    if (err) {\n      next(err);\n    } else {\n      if (userDetail == null) {\n        res.status(500).json({\n          status: \"error\",\n          message: \"User not found.\",\n          data: null\n        });\n      } else {\n        var model = new _blog.default({\n          blogtext: req.body.blogtext,\n          userid: req.body.userid,\n          isactive: req.body.isactive\n        });\n        model.save().then(function (doc) {\n          if (!doc || doc.length === 0) {\n            res.status(500).json({\n              status: \"error\",\n              message: err,\n              data: null\n            });\n          }\n\n          res.status(200).json({\n            status: \"success\",\n            message: \"Post added successfully.\",\n            data: doc\n          });\n        }).catch(function (err) {\n          res.status(500).json({\n            status: \"error\",\n            message: err,\n            data: null\n          });\n        });\n      }\n    }\n  });\n}); // Get all blog\n\nrouter.get('', function (req, res, next) {\n  console.log('call get all blog');\n\n  _blog.default.find().then(function (result) {\n    res.status(200).send(result);\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // Get blog details\n\nrouter.get('/getblog', function (req, res, next) {\n  console.log('get existing blog by id');\n\n  _blog.default.findOne({\n    _id: req.query.blogid\n  }).then(function (doc) {\n    if (doc == null) {\n      res.status(500).json({\n        status: \"error\",\n        message: \"blog not found.\",\n        data: null\n      });\n    } else {\n      res.status(200).send(doc);\n    }\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n}); // Update existing blog\n\nrouter.put('', function (req, res, next) {\n  console.log('put to update existing blog');\n\n  if (Object.keys(req.body).length === 0) {\n    return res.status(400).send('Request body is missing');\n  }\n\n  _blog.default.findOneAndUpdate({\n    _id: req.query.blogid\n  }, req.body, {\n    new: true\n  }).then(function (result) {\n    console.log(result);\n\n    if (result == null) {\n      res.status(500).json({\n        status: \"error\",\n        message: \"blog not found.\",\n        data: null\n      });\n    } else {\n      res.status(200).json({\n        status: \"success\",\n        message: \"Record updated successfully.\",\n        data: result\n      });\n    }\n  }).catch(function (err) {\n    res.status(500).send(err);\n  });\n}); // Delete a blog\n\nrouter.delete('', function (req, res) {\n  _blog.default.findOneAndRemove({\n    _id: req.query.blogid\n  }).then(function (doc) {\n    if (doc == null) {\n      res.status(500).json({\n        status: \"error\",\n        message: \"blog not found.\",\n        data: null\n      });\n    } else {\n      res.status(200).json({\n        status: \"success\",\n        message: \"Record deleted successfully.\",\n        data: doc\n      });\n    }\n  }).catch(function (err) {\n    res.status(500).json(err);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "blog.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "req",
        "res",
        "next",
        "console",
        "log",
        "Object",
        "keys",
        "body",
        "length",
        "status",
        "send",
        "userModel",
        "findOne",
        "_id",
        "userid",
        "err",
        "userDetail",
        "json",
        "message",
        "data",
        "model",
        "blogModel",
        "blogtext",
        "isactive",
        "save",
        "then",
        "doc",
        "catch",
        "get",
        "find",
        "result",
        "query",
        "blogid",
        "put",
        "findOneAndUpdate",
        "new",
        "delete",
        "findOneAndRemove",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf,C,CAEA;AACA;AAEA;;;AACAF,MAAM,CAACG,IAAP,CAAY,EAAZ,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYN,GAAG,CAACO,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,WAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yBAArB,CAAP;AACH;;AAEDC,gBAAUC,OAAV,CAAkB;AACdC,IAAAA,GAAG,EAAEb,GAAG,CAACO,IAAJ,CAASO;AADA,GAAlB,EAEG,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AAC1B,QAAID,GAAJ,EAAS;AACLb,MAAAA,IAAI,CAACa,GAAD,CAAJ;AACH,KAFD,MAEO;AACH,UAAIC,UAAU,IAAI,IAAlB,EAAwB;AACpBf,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AACjBR,UAAAA,MAAM,EAAE,OADS;AAEjBS,UAAAA,OAAO,EAAE,iBAFQ;AAGjBC,UAAAA,IAAI,EAAE;AAHW,SAArB;AAKH,OAND,MAMO;AACH,YAAIC,KAAK,GAAG,IAAIC,aAAJ,CAAc;AACtBC,UAAAA,QAAQ,EAAEtB,GAAG,CAACO,IAAJ,CAASe,QADG;AAEtBR,UAAAA,MAAM,EAAEd,GAAG,CAACO,IAAJ,CAASO,MAFK;AAGtBS,UAAAA,QAAQ,EAAEvB,GAAG,CAACO,IAAJ,CAASgB;AAHG,SAAd,CAAZ;AAKAH,QAAAA,KAAK,CAACI,IAAN,GACKC,IADL,CACU,UAACC,GAAD,EAAS;AACX,cAAI,CAACA,GAAD,IAAQA,GAAG,CAAClB,MAAJ,KAAe,CAA3B,EAA8B;AAC1BP,YAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AACjBR,cAAAA,MAAM,EAAE,OADS;AAEjBS,cAAAA,OAAO,EAAEH,GAFQ;AAGjBI,cAAAA,IAAI,EAAE;AAHW,aAArB;AAKH;;AACDlB,UAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AACjBR,YAAAA,MAAM,EAAE,SADS;AAEjBS,YAAAA,OAAO,EAAE,0BAFQ;AAGjBC,YAAAA,IAAI,EAAEO;AAHW,WAArB;AAKH,SAdL,EAcOC,KAdP,CAca,UAACZ,GAAD,EAAS;AACdd,UAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AACjBR,YAAAA,MAAM,EAAE,OADS;AAEjBS,YAAAA,OAAO,EAAEH,GAFQ;AAGjBI,YAAAA,IAAI,EAAE;AAHW,WAArB;AAKH,SApBL;AAqBH;AACJ;AACJ,GAzCD;AA0CH,CAhDD,E,CAkDA;;AACAvB,MAAM,CAACgC,GAAP,CAAW,EAAX,EAAe,UAAU5B,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACAiB,gBAAUQ,IAAV,GACKJ,IADL,CACU,UAAAK,MAAM,EAAI;AACZ7B,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBoB,MAArB;AACH,GAHL,EAIKH,KAJL,CAIW,UAAAZ,GAAG,EAAI;AACVd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqBF,GAArB;AACH,GANL;AAOH,CATD,E,CAWA;;AACAnB,MAAM,CAACgC,GAAP,CAAW,UAAX,EAAuB,UAAU5B,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AACAiB,gBAAUT,OAAV,CAAkB;AACVC,IAAAA,GAAG,EAAEb,GAAG,CAAC+B,KAAJ,CAAUC;AADL,GAAlB,EAGKP,IAHL,CAGU,UAAAC,GAAG,EAAI;AACT,QAAIA,GAAG,IAAI,IAAX,EAAiB;AACbzB,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AACjBR,QAAAA,MAAM,EAAE,OADS;AAEjBS,QAAAA,OAAO,EAAE,iBAFQ;AAGjBC,QAAAA,IAAI,EAAE;AAHW,OAArB;AAKH,KAND,MAMO;AACHlB,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBgB,GAArB;AACH;AACJ,GAbL,EAcKC,KAdL,CAcW,UAAAZ,GAAG,EAAI;AACVd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqBF,GAArB;AACH,GAhBL;AAiBH,CAnBD,E,CAqBA;;AACAnB,MAAM,CAACqC,GAAP,CAAW,EAAX,EAAe,UAAUjC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYN,GAAG,CAACO,IAAhB,EAAsBC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,WAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yBAArB,CAAP;AACH;;AAEDW,gBAAUa,gBAAV,CAA2B;AACnBrB,IAAAA,GAAG,EAAEb,GAAG,CAAC+B,KAAJ,CAAUC;AADI,GAA3B,EAEOhC,GAAG,CAACO,IAFX,EAEiB;AACT4B,IAAAA,GAAG,EAAE;AADI,GAFjB,EAKKV,IALL,CAKU,UAAAK,MAAM,EAAI;AACZ3B,IAAAA,OAAO,CAACC,GAAR,CAAY0B,MAAZ;;AACA,QAAIA,MAAM,IAAI,IAAd,EAAoB;AAChB7B,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AACjBR,QAAAA,MAAM,EAAE,OADS;AAEjBS,QAAAA,OAAO,EAAE,iBAFQ;AAGjBC,QAAAA,IAAI,EAAE;AAHW,OAArB;AAKH,KAND,MAMO;AACHlB,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AACjBR,QAAAA,MAAM,EAAE,SADS;AAEjBS,QAAAA,OAAO,EAAE,8BAFQ;AAGjBC,QAAAA,IAAI,EAAEW;AAHW,OAArB;AAKH;AACJ,GApBL,EAqBKH,KArBL,CAqBW,UAAAZ,GAAG,EAAI;AACVd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,GAArB;AACH,GAvBL;AAwBH,CA9BD,E,CAgCA;;AACAnB,MAAM,CAACwC,MAAP,CAAc,EAAd,EAAkB,UAACpC,GAAD,EAAMC,GAAN,EAAc;AAC5BoB,gBAAUgB,gBAAV,CAA2B;AACnBxB,IAAAA,GAAG,EAAEb,GAAG,CAAC+B,KAAJ,CAAUC;AADI,GAA3B,EAGKP,IAHL,CAGU,UAAAC,GAAG,EAAI;AACT,QAAIA,GAAG,IAAI,IAAX,EAAiB;AACbzB,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AACjBR,QAAAA,MAAM,EAAE,OADS;AAEjBS,QAAAA,OAAO,EAAE,iBAFQ;AAGjBC,QAAAA,IAAI,EAAE;AAHW,OAArB;AAKH,KAND,MAMO;AACHlB,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AACjBR,QAAAA,MAAM,EAAE,SADS;AAEjBS,QAAAA,OAAO,EAAE,8BAFQ;AAGjBC,QAAAA,IAAI,EAAEO;AAHW,OAArB;AAKH;AACJ,GAjBL,EAkBKC,KAlBL,CAkBW,UAAAZ,GAAG,EAAI;AACVd,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqBF,GAArB;AACH,GApBL;AAqBH,CAtBD;AAwBAuB,MAAM,CAACC,OAAP,GAAiB3C,MAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\r\nimport blogModel from '../models/blog.model';\r\nimport userModel from '../models/user.model';\r\n\r\nconst router = express.Router();\r\n\r\n// // JWT secure validation\r\n// router.use(require('../../tokenChecker'))\r\n\r\n// Create new blog\r\nrouter.post('', function (req, res, next) {\r\n    console.log('post to create blog');\r\n    if (Object.keys(req.body).length === 0) {\r\n        return res.status(400).send('Request body is missing');\r\n    }\r\n\r\n    userModel.findOne({\r\n        _id: req.body.userid\r\n    }, function (err, userDetail) {\r\n        if (err) {\r\n            next(err);\r\n        } else {\r\n            if (userDetail == null) {\r\n                res.status(500).json({\r\n                    status: \"error\",\r\n                    message: \"User not found.\",\r\n                    data: null\r\n                })\r\n            } else {\r\n                let model = new blogModel({\r\n                    blogtext: req.body.blogtext,\r\n                    userid: req.body.userid,\r\n                    isactive: req.body.isactive\r\n                });\r\n                model.save()\r\n                    .then((doc) => {\r\n                        if (!doc || doc.length === 0) {\r\n                            res.status(500).json({\r\n                                status: \"error\",\r\n                                message: err,\r\n                                data: null\r\n                            });\r\n                        }\r\n                        res.status(200).json({\r\n                            status: \"success\",\r\n                            message: \"Post added successfully.\",\r\n                            data: doc\r\n                        });\r\n                    }).catch((err) => {\r\n                        res.status(500).json({\r\n                            status: \"error\",\r\n                            message: err,\r\n                            data: null\r\n                        });\r\n                    });\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n// Get all blog\r\nrouter.get('', function (req, res, next) {\r\n    console.log('call get all blog');\r\n    blogModel.find()\r\n        .then(result => {\r\n            res.status(200).send(result);\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Get blog details\r\nrouter.get('/getblog', function (req, res, next) {\r\n    console.log('get existing blog by id');\r\n    blogModel.findOne({\r\n            _id: req.query.blogid\r\n        })\r\n        .then(doc => {\r\n            if (doc == null) {\r\n                res.status(500).json({\r\n                    status: \"error\",\r\n                    message: \"blog not found.\",\r\n                    data: null\r\n                })\r\n            } else {\r\n                res.status(200).send(doc);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\n// Update existing blog\r\nrouter.put('', function (req, res, next) {\r\n    console.log('put to update existing blog');\r\n    if (Object.keys(req.body).length === 0) {\r\n        return res.status(400).send('Request body is missing');\r\n    }\r\n\r\n    blogModel.findOneAndUpdate({\r\n            _id: req.query.blogid\r\n        }, req.body, {\r\n            new: true\r\n        })\r\n        .then(result => {\r\n            console.log(result);\r\n            if (result == null) {\r\n                res.status(500).json({\r\n                    status: \"error\",\r\n                    message: \"blog not found.\",\r\n                    data: null\r\n                })\r\n            } else {\r\n                res.status(200).json({\r\n                    status: \"success\",\r\n                    message: \"Record updated successfully.\",\r\n                    data: result\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            res.status(500).send(err);\r\n        });\r\n});\r\n\r\n// Delete a blog\r\nrouter.delete('', (req, res) => {\r\n    blogModel.findOneAndRemove({\r\n            _id: req.query.blogid\r\n        })\r\n        .then(doc => {\r\n            if (doc == null) {\r\n                res.status(500).json({\r\n                    status: \"error\",\r\n                    message: \"blog not found.\",\r\n                    data: null\r\n                })\r\n            } else {\r\n                res.status(200).json({\r\n                    status: \"success\",\r\n                    message: \"Record deleted successfully.\",\r\n                    data: doc\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            res.status(500).json(err);\r\n        });\r\n});\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1550751613676
  },
  "{\"sourceRoot\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"filename\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\\\\src\\\\models\\\\blog.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\NodeJsTraining\\\\node-training-accessment\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\NodeJsTraining\\node-training-accessment",
      "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\models\\blog.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\NodeJsTraining\\node-training-accessment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\NodeJsTraining\\node-training-accessment\\src\\models\\blog.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\NodeJsTraining\\node-training-accessment\\src\\models\\blog.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\models",
        "sourceFileName": "blog.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar blogSchema = new _mongoose.default.Schema({\n  blogtext: {\n    type: String,\n    required: true\n  },\n  userid: {\n    type: String,\n    required: true\n  },\n  isactive: Boolean,\n  createddate: Date,\n  updateddate: Date\n});\nblogSchema.pre('save', function (next) {\n  console.log('blogSchema pre calling');\n  var currentDate = new Date();\n  this.updateddate = currentDate;\n\n  if (this.createddate == undefined) {\n    this.createddate = currentDate;\n  }\n\n  next();\n});\nmodule.exports = _mongoose.default.model('blog', blogSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cubW9kZWwuanMiXSwibmFtZXMiOlsiYmxvZ1NjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwiYmxvZ3RleHQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ1c2VyaWQiLCJpc2FjdGl2ZSIsIkJvb2xlYW4iLCJjcmVhdGVkZGF0ZSIsIkRhdGUiLCJ1cGRhdGVkZGF0ZSIsInByZSIsIm5leHQiLCJjb25zb2xlIiwibG9nIiwiY3VycmVudERhdGUiLCJ1bmRlZmluZWQiLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFFQSxJQUFJQSxVQUFVLEdBQUcsSUFBSUMsa0JBQVNDLE1BQWIsQ0FBb0I7QUFDakNDLEVBQUFBLFFBQVEsRUFBRTtBQUNOQyxJQUFBQSxJQUFJLEVBQUVDLE1BREE7QUFFTkMsSUFBQUEsUUFBUSxFQUFFO0FBRkosR0FEdUI7QUFLakNDLEVBQUFBLE1BQU0sRUFBQztBQUNISCxJQUFBQSxJQUFJLEVBQUNDLE1BREY7QUFFSEMsSUFBQUEsUUFBUSxFQUFDO0FBRk4sR0FMMEI7QUFTakNFLEVBQUFBLFFBQVEsRUFBRUMsT0FUdUI7QUFVakNDLEVBQUFBLFdBQVcsRUFBRUMsSUFWb0I7QUFXakNDLEVBQUFBLFdBQVcsRUFBRUQ7QUFYb0IsQ0FBcEIsQ0FBakI7QUFjQVgsVUFBVSxDQUFDYSxHQUFYLENBQWUsTUFBZixFQUF1QixVQUFVQyxJQUFWLEVBQWdCO0FBQ25DQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx3QkFBWjtBQUNBLE1BQUlDLFdBQVcsR0FBRyxJQUFJTixJQUFKLEVBQWxCO0FBQ0EsT0FBS0MsV0FBTCxHQUFtQkssV0FBbkI7O0FBQ0EsTUFBSSxLQUFLUCxXQUFMLElBQW9CUSxTQUF4QixFQUFtQztBQUMvQixTQUFLUixXQUFMLEdBQW1CTyxXQUFuQjtBQUNIOztBQUNESCxFQUFBQSxJQUFJO0FBQ1AsQ0FSRDtBQVVBSyxNQUFNLENBQUNDLE9BQVAsR0FBaUJuQixrQkFBU29CLEtBQVQsQ0FBZSxNQUFmLEVBQXVCckIsVUFBdkIsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXE5vZGVKc1RyYWluaW5nXFxub2RlLXRyYWluaW5nLWFjY2Vzc21lbnRcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxuXHJcbmxldCBibG9nU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICBibG9ndGV4dDoge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgfSxcclxuICAgIHVzZXJpZDp7XHJcbiAgICAgICAgdHlwZTpTdHJpbmcsXHJcbiAgICAgICAgcmVxdWlyZWQ6dHJ1ZVxyXG4gICAgfSxcclxuICAgIGlzYWN0aXZlOiBCb29sZWFuLFxyXG4gICAgY3JlYXRlZGRhdGU6IERhdGUsXHJcbiAgICB1cGRhdGVkZGF0ZTogRGF0ZVxyXG59KTtcclxuXHJcbmJsb2dTY2hlbWEucHJlKCdzYXZlJywgZnVuY3Rpb24gKG5leHQpIHtcclxuICAgIGNvbnNvbGUubG9nKCdibG9nU2NoZW1hIHByZSBjYWxsaW5nJyk7XHJcbiAgICB2YXIgY3VycmVudERhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgdGhpcy51cGRhdGVkZGF0ZSA9IGN1cnJlbnREYXRlO1xyXG4gICAgaWYgKHRoaXMuY3JlYXRlZGRhdGUgPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVkZGF0ZSA9IGN1cnJlbnREYXRlO1xyXG4gICAgfVxyXG4gICAgbmV4dCgpO1xyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoJ2Jsb2cnLCBibG9nU2NoZW1hKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "blog.model.js"
      ],
      "names": [
        "blogSchema",
        "mongoose",
        "Schema",
        "blogtext",
        "type",
        "String",
        "required",
        "userid",
        "isactive",
        "Boolean",
        "createddate",
        "Date",
        "updateddate",
        "pre",
        "next",
        "console",
        "log",
        "currentDate",
        "undefined",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA;;;;AAEA,IAAIA,UAAU,GAAG,IAAIC,kBAASC,MAAb,CAAoB;AACjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GADuB;AAKjCC,EAAAA,MAAM,EAAC;AACHH,IAAAA,IAAI,EAACC,MADF;AAEHC,IAAAA,QAAQ,EAAC;AAFN,GAL0B;AASjCE,EAAAA,QAAQ,EAAEC,OATuB;AAUjCC,EAAAA,WAAW,EAAEC,IAVoB;AAWjCC,EAAAA,WAAW,EAAED;AAXoB,CAApB,CAAjB;AAcAX,UAAU,CAACa,GAAX,CAAe,MAAf,EAAuB,UAAUC,IAAV,EAAgB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,MAAIC,WAAW,GAAG,IAAIN,IAAJ,EAAlB;AACA,OAAKC,WAAL,GAAmBK,WAAnB;;AACA,MAAI,KAAKP,WAAL,IAAoBQ,SAAxB,EAAmC;AAC/B,SAAKR,WAAL,GAAmBO,WAAnB;AACH;;AACDH,EAAAA,IAAI;AACP,CARD;AAUAK,MAAM,CAACC,OAAP,GAAiBnB,kBAASoB,KAAT,CAAe,MAAf,EAAuBrB,UAAvB,CAAjB",
      "sourceRoot": "D:\\NodeJsTraining\\node-training-accessment\\src\\models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\n\r\nlet blogSchema = new mongoose.Schema({\r\n    blogtext: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    userid:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    isactive: Boolean,\r\n    createddate: Date,\r\n    updateddate: Date\r\n});\r\n\r\nblogSchema.pre('save', function (next) {\r\n    console.log('blogSchema pre calling');\r\n    var currentDate = new Date();\r\n    this.updateddate = currentDate;\r\n    if (this.createddate == undefined) {\r\n        this.createddate = currentDate;\r\n    }\r\n    next();\r\n});\r\n\r\nmodule.exports = mongoose.model('blog', blogSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1550748448214
  }
}